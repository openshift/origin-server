#!/usr/bin/env ruby
#--
# Copyright 2010 Red Hat, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#++

def usage
    puts <<USAGE
== Synopsis

ss-authorized-ssh-key-remove: Removes an authorized ssh key from the app.
  This command must be run as root.

== Usage

ss-authorized-ssh-key-remove  \\
        --with-app-uuid APP_UUID \\
        --with-container-uuid UUID \\
        --with-ssh-key KEY \\
        [--with-ssh-comment COMMENT]

Options:
-h|--help:
   Prints this message

UUID: Unique identifier for the application
SSH_KEY: The ssh key to remove

USAGE
end

require 'rubygems'
require 'stickshift-node'
require 'stickshift-node/utils/shell_exec'
opts = GetoptLong.new(
    ["--with-app-uuid",       "-a", GetoptLong::REQUIRED_ARGUMENT],
    ["--with-container-uuid", "-c", GetoptLong::REQUIRED_ARGUMENT],
    ["--with-ssh-key",     "-s", GetoptLong::REQUIRED_ARGUMENT],
    ["--with-ssh-comment", "-m", GetoptLong::REQUIRED_ARGUMENT]
)

args = {}
begin
    opts.each{ |k,v| args[k]=v }
rescue GetoptLong::Error => e
    usage
    exit -100
end

if args["--help"]
  usage
  exit -1
end

uuid = args['--with-container-uuid']
app_uuid = args['--with-app-uuid']
ssh_key = args['--with-ssh-key']
comment = args['--with-ssh-comment']

unless uuid and ssh_key
  usage
  exit -100
end

begin
  container = StickShift::ApplicationContainer.new(uuid,uuid)
  container.user.remove_ssh_key(ssh_key, comment)
rescue Exception => e
  $stderr.puts(e.message)
  exit -1
else
  exit 0
end
