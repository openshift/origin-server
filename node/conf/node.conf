# These should not be left at default values, even for a demo.
# "PUBLIC" networking values are ones that end-users should be able to reach.
PUBLIC_HOSTNAME="please.set.node.public-hostname.fqdn"       # The node host's public hostname
PUBLIC_IP="127.0.0.1"                                        # The node host's public IP address
BROKER_HOST="localhost"                                      # IP or DNS name of broker server for REST API

# Usually (unless in a demo) this should be changed to the domain for your installation:
CLOUD_DOMAIN="example.com"                                  # Domain suffix to use for applications (Must match broker config)

# You may want these, depending on the complexity of your networking:
# EXTERNAL_ETH_DEV='eth0'                                    # Specify the internet facing public ethernet device
# INTERNAL_ETH_DEV='eth1'                                    # Specify the internal cluster facing ethernet device

# Uncomment and use the following line if you want to gear users to be members of
# additional groups besides the one with the same id as the uid. The other group
# should be an existing group.
#GEAR_SUPPLEMENTARY_GROUPS="another_group"  # Supplementary groups for gear UIDs (comma separated list)

# Generally the following should not be changed:
ENABLE_CGROUPS=1                                             # constrain gears in cgroups (1=yes, 0=no)
GEAR_BASE_DIR="/var/lib/openshift"                           # gear root directory
GEAR_SKEL_DIR="/etc/openshift/skel"                          # skel files to use when building a gear
GEAR_SHELL="/usr/bin/oo-trap-user"                           # shell to use for the gear
GEAR_GECOS="OpenShift guest"                                 # Gecos information to populate for the gear user
GEAR_MIN_UID=1000                                            # Lower bound of UID used to create gears
GEAR_MAX_UID=6999                                            # Upper bound of UID used to create gears
OPENSHIFT_NODE_PLUGINS=""                                    # Extensions to load when customize/observe openshift-origin-node models
CARTRIDGE_BASE_PATH="/usr/libexec/openshift/cartridges"      # Locations where cartridges are installed
LAST_ACCESS_DIR="/var/lib/openshift/.last_access"            # Location to maintain last accessed time for gears
APACHE_ACCESS_LOG="/var/log/httpd/openshift_log"             # Localion of httpd for node
PROXY_MIN_PORT_NUM=35531                                     # Lower bound of port numbers used to proxy ports externally
PROXY_PORTS_PER_GEAR=5                                       # Number of proxy ports available per gear
CREATE_APP_SYMLINKS=0                                        # If set to 1, creates gear-name symlinks to the UUID directories (debugging only)
OPENSHIFT_HTTP_CONF_DIR="/etc/httpd/conf.d/openshift"

PLATFORM_LOG_FILE=/var/log/openshift/node/platform.log
PLATFORM_LOG_LEVEL=DEBUG
PLATFORM_TRACE_LOG_FILE=/var/log/openshift/node/platform-trace.log
PLATFORM_TRACE_LOG_LEVEL=DEBUG

# Uncomment and use the following lines if you want platform log entries to contain
# parsable attributes associated with a given MCollective request. Possible values
# are request_id, app_uuid, container_uuid. The entries will appear in the order
# specified.
# PLATFORM_LOG_CONTEXT_ENABLED=1
# PLATFORM_LOG_CONTEXT_ATTRS=request_id,app_uuid

LIBVIRT_PRIVATE_IP_RANGE=172.16.0.0/12
LIBVIRT_PRIVATE_IP_ROUTE=172.16.0.0/12
LIBVIRT_PRIVATE_IP_GW=172.16.0.1

CONTAINERIZATION_PLUGIN=openshift-origin-container-selinux
QUOTA_WARNING_PERCENT=90.0

REPORT_BUILD_ANALYTICS=true

# Traffic control is enabled by default.  To ignore the bandwidth settings in
# resource_limits.conf this can be set to false.  Changing this value requires
# restarting the MCollective service on the Node as well as stopping the
# openshift-tc service.
# TRAFFIC_CONTROL_ENABLED=true

# MOTD_FILE="/etc/openshift/welcome.rhcsh"                   # Change the default rhcs welcome message

# Gems for managing the frontend http server
# NOTE: Steps must be taken both before and after these values are changed.
#       Run "oo-frontend-plugin-modify  --help" for more information.
OPENSHIFT_FRONTEND_HTTP_PLUGINS=openshift-origin-frontend-apache-mod-rewrite,openshift-origin-frontend-nodejs-websocket

# Default plugin for Node logs.  Logs to /var/log/openshift/node/platform*.log
#PLATFORM_LOG_CLASS="SplitTraceLogger"

# Uncomment the following line if you want to enable the Watchman Metrics plugin.
# This plugin will gather and publish the following metrics for all gears:
#
# - cgroups information
#
# - cartridge metrics, if a cartridge's manifest.yml contains a Metrics entry
#   and it contains an executable bin/metrics script
#
# - application metrics, if the application repository contains an executable
#   .openshift/action_hooks/metrics script
#
# This plugin is *disabled* by default and can only be enabled by uncommenting
# the line below.
#
# WATCHMAN_METRICS_ENABLED=true


# Specify how often (in seconds) the Watchman Metrics plugin should gather metrics.
# Default value: 60 seconds
#
# WATCHMAN_METRICS_INTERVAL=30


# Specify the names and display order of metadata about a gear that are
# included in each message.
#
# This value must have the format $keyName1:$metadata1,$keyName2:$metadata2,...
#
# Each key is user-specified (e.g. app_name or appName or app).
#
# Each metadata item is a gear environment variable such as
# OPENSHIFT_APP_NAME, OPENSHIFT_GEAR_UUID, etc.
#
# The default value is "appName:OPENSHIFT_APP_NAME,gear:OPENSHIFT_GEAR_UUID,app:OPENSHIFT_APP_UUID,ns:OPENSHIFT_NAMESPACE"
#
# METRICS_METADATA="appName:OPENSHIFT_APP_NAME,gearUuid:OPENSHIFT_GEAR_UUID"


# Specify which cgroups keys to retrieve when gathering cgroups metrics.
#
# If not set, defaults to all available cgroups keys.
#
# Note: only specify the name of the key and not the value(s) within it.
# For example, if you want to get information from memory.stat (such as
# memory.stat's rss), you must specify memory.stat. This will retrieve
# all the values associated with memory.stat and report them all. There is
# currently no support for specifying something such as memory.stat.rss
# and having it only report on that single value.
#
# CGROUPS_METRICS_KEYS="cpu.stat,cpuacct.stat,memory.usage_in_bytes"


# Specify the maximum length of a cgroups metrics message (not including
# other fields that Syslog may include, such as timestamp and pid).
#
# Default value is 1024 bytes.
#
# Syslog messages have a maximum length, typically around 2048 bytes.
# As such, this value should be low enough to ensure that additional
# Syslog fields such as timestamp, pid, app uuid, gear uuid, and so on
# can fit without anything being truncated.
#
# This will allow multiple cgroups metrics to be batched together in a
# single line, which is more efficient resource-wise than if each metric
# were printed on its own line.
#
# This is the maximum length of a cgroups metrics message, but it is possible
# that some messages may be shorter.
#
# MAX_CGROUPS_METRICS_MESSAGE_LENGTH=1024


# Maximum amount of time (in seconds) a gear's cartridge and application
# metrics may execute before being terminated. This timeout applies
# to the overall execution of *all* of a gear's cartridge and application
# metrics scripts.
#
# Defaults to 3 seconds.
#
# METRICS_PER_GEAR_TIMEOUT=3


# Maximum amount of time (in seconds) that an individual cartridge or
# application metrics script my execute before being terminated.
#
# Defaults to 1 second.
#
# METRICS_PER_SCRIPT_TIMEOUT=1


# Maximum line length allowed for metrics coming from cartridge and
# applciation metrics scripts. Lines over this length will be discarded
# in their entirety.
#
# Defaults to 2000 bytes.
#
# METRICS_MAX_LINE_LENGTH=2000
