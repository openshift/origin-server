= semantic_form_for domain, :simple => true do |f|
  %input{:type => "hidden", :name => "then", :value => @referrer }
  %input{:type => "hidden", :name => "domain_param", :value => params[:domain_param] }
  = f.semantic_errors :alias => {:name => :id}, :except => :name
  .control-group.control-group-important{:class => domain.errors[:name].present? || domain.errors[:namespace].present? ? 'error' : '', :id => "domain_name_group", :data => domain.errors[:name].present? || domain.errors[:namespace].present? ? {:"server-error" => 'server-error'} : {}}
    .controls.first
      .input-prepend.input-append.wrap
        %span.add-on> http://applicationname&ndash;
        %label.invisible{:for => 'domain_name'} Domain name
        = f.text_field :name, :autofocus => true, :placeholder => 'Domain name', :class => 'domain_name'
        %span.add-on>= ".#{RestApi.application_domain_suffix}"
      = f.semantic_errors :name, :alias => {:name => :id}, :class => [:unstyled, :errors, 'help-block']
  = f.buttons do
    = link_to "Cancel", @referrer || (domain.persisted? ? domain_path(domain) : settings_path), :class => 'btn'
    = f.commit_button :label => domain.persisted? ? 'Save' : 'Create'
    = f.loading
