- breadcrumb_for_application @application, 'Modify Your Storage'
- content_for :page_title, 'Modify Your Storage'

%h1 Modify Your Storage

%section#storage-gear-groups
  %section
    %p
      Gear storage space is used for code, logs, cache, config files, and databases.
      %strong Gear storage is only accessible to the gear it's associated with, and isn't able to be shared between gears.
      User files should be kept in shared storage.

    %p
      If you are decreasing your storage, make sure to check your usage to ensure you will still have sufficient disk space.

  %section
    %h3 Check Your Usage
    %p
      You can check your usage by SSH-ing into your app and running the quota command.

      %pre.cli
        = preserve do
          :escaped
            $ ssh #{@application.ssh_string}
            > quota

  - @gear_groups.each_with_index do |group,g|
    - group.cartridges.each_with_index do |cartridge,c|
      .gear-group.tile
        %h2
          = cartridge.display_name
          %span.pull-right= cartridge_storage(cartridge, group.gears.length)

        = semantic_form_for cartridge,
                            :simple => true,
                            :method => :put,
                            :url => application_storage_cartridge_path(@application.id, cartridge.name) do |f|

          = f.semantic_errors :additional_gear_storage

          %p
            This cartridge currently provides #{cartridge.base_gear_storage}GB of storage per gear.

          - if group.gears.length > 1
            %p
              This cartridge is scalable.
              The additional storage will apply to each extra gear.

          = f.inputs :inline => true, :without_errors => true do
            .input-prepend
              %span.add-on Total Storage Per Gear
              = f.input :total_storage, additional_storage_options(cartridge.base_gear_storage,@user.max_storage_per_gear).merge({:input_html => {:style => 'width: auto', :title => 'Maximum gears'}})

            = f.commit_button :label => 'Save', :button_html => {:class => 'btn btn-small'}
            = f.loading

  %p
    For more information about storage for your application see
    #{link_to 'our FAQ on storage', storage_help_url}.

- content_for :javascripts do
  :javascript
    jQuery('#storage-gear-groups FORM :input').change(function() {
      jQuery(this).closest('form').find('INPUT.btn').addClass('btn-primary');
    });
