#!/usr/bin/env oo-ruby

# The purpose of this is just to run the rails console for the right
# app, with the right ruby, with the right user and not have to
# remember the details.

# oo-ruby gets us the correct ruby and bundler for free.

#--
# Copyright 2013 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#++

require 'rubygems'
require 'getoptlong'

def usage
  puts <<USAGE
== Synopsis

oo-admin-rails-shell: Invoke the broker rails console correctly

== Usage

oo-admin-rails-shell [OPTIONS]

Options:
-w|--web
    Get a shell against the developer console instead of the broker
-b|--bundle
    Have bundler attempt to fix Gemfile.lock first
-h|--help
    Show Usage info
USAGE
  exit 255
end

opts = GetoptLong.new(
    ["--web",              "-w", GetoptLong::NO_ARGUMENT],
    ["--bundle",           "-b", GetoptLong::NO_ARGUMENT],
    ["--help",             "-h", GetoptLong::NO_ARGUMENT]
)

$args = {}
begin
  opts.each{ |k,v| $args[k]=v }
rescue GetoptLong::Error => e
  usage
end

if $args["--help"]
  usage
end

def load_env(dir)
  # fix Gemfile.lock if requested
  system("cd #{dir} && rm -f Gemfile.lock && bundle install --local") or exit 1 if $args['--bundle']

  # Change to apache user and group.
  # Note this doesn't change the SELinux context under which we are running.
  Process::Sys.setgid(48)  # apache group
  Process::Sys.setuid(48)  # apache user

  # load the app
  $: << dir
  begin
    require 'config/application'
  rescue Exception
    puts "Couldn't load environment. Try adding --bundle if there were missing gems."
    exit 1
  end
end

def start_console(app)
  exit catch(:IRB_EXIT) { Rails::Console.start app }
end

require 'rails/commands/console'
if !$args['--web']
  load_env '/var/www/openshift/broker'
  start_console Broker::Application
elsif File.exists? '/var/www/openshift/console'
  load_env '/var/www/openshift/console'
  start_console OpenshiftConsole::Application
elsif File.exists? '/var/www/openshift/site'
  load_env '/var/www/openshift/site'
  start_console RedHatCloud::Application
else
  puts "--web specified but no developer console installed"
  exit 1
end

exit 0
