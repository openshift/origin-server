#!/bin/bash -eu

source $OPENSHIFT_CARTRIDGE_SDK_BASH
source "${OPENSHIFT_10GENMMSAGENT_DIR}lib/util"

cartridge_type="10gen-mms-agent"

function status() {
    running_process=$(get_process)
    if output=$(if ps -ef | grep ${running_process} | grep -qv grep > /dev/null; then echo "10gen-mms-agent is Running"; else echo "10gen-mms-agent is Stopped"; exit 1; fi 2>&1)
    then
        client_result "$output"
    else
        client_result "10gen-mms-agent is either stopped or inaccessible"
    fi
}

function get_process() {
  if  [ -z "${OPENSHIFT_MMS_API_KEY}" ]
  then
    echo ${OPENSHIFT_GEAR_UUID}_agent.py
  else
    echo "mongodb-mms-monitoring-agent"
  fi
}

function start() {
    ! is_agent_installed && install_agent_sources
    echo "Starting $cartridge_type cartridge"
    running_process=$(get_process)
    if ps -ef | grep ${running_process} | grep -qv grep > /dev/null 2>&1
    then
        exit 0
    fi

    # Remove the compiled versions of the settings.py file and reset the mms credentials from the file in repo
    # This is required so that any user changes to credentials in this file can be picked up and recompiled
    #
    rm -f ${OPENSHIFT_10GENMMSAGENT_DIR}/mms-agent/settings.pyc ${OPENSHIFT_10GENMMSAGENT_DIR}/mms-agent/settings.pyo

    if [ -f "${OPENSHIFT_REPO_DIR}/.openshift/mms/settings.py" ]
    then
      new_mms_key_line=`cat ${OPENSHIFT_REPO_DIR}/.openshift/mms/settings.py | grep -E "^mms_key\s*=.*"`
      new_secret_key_line=`cat ${OPENSHIFT_REPO_DIR}/.openshift/mms/settings.py | grep -E "^secret_key\s*=.*"`
      sed -i "s/^mms_key\s*=.*/${new_mms_key_line}/g" ${OPENSHIFT_10GENMMSAGENT_DIR}/mms-agent/settings.py
      sed -i "s/^secret_key\s*=.*/${new_secret_key_line}/g" ${OPENSHIFT_10GENMMSAGENT_DIR}/mms-agent/settings.py

      LOGPIPE=${OPENSHIFT_HOMEDIR}/app-root/runtime/logshifter-10gen-mms-agent
      rm -f $LOGPIPE && mkfifo $LOGPIPE

      /usr/bin/logshifter -tag 10gen-mms-agent < $LOGPIPE &
      nohup python ${OPENSHIFT_10GENMMSAGENT_DIR}/mms-agent/${OPENSHIFT_GEAR_UUID}_agent.py &> $LOGPIPE &
      echo $! > ${OPENSHIFT_10GENMMSAGENT_DIR}/run/mms-agent.pid
    elif [ -d ${OPENSHIFT_MMS_BASE_DIR} ]
    then
      if [ -n "${OPENSHIFT_MMS_API_KEY}" ]
      then
        pushd ${OPENSHIFT_MMS_BASE_DIR} >/dev/null
        sed -i "s/^mmsApiKey\s*=.*/mmsApiKey=${OPENSHIFT_MMS_API_KEY}/g" monitoring-agent.config
        LOGPIPE=${OPENSHIFT_HOMEDIR}/app-root/runtime/logshifter-10gen-mms-agent
        rm -f $LOGPIPE && mkfifo $LOGPIPE

        /usr/bin/logshifter -tag 10gen-mms-agent < $LOGPIPE &
        nohup ${OPENSHIFT_MMS_BASE_DIR}/mongodb-mms-monitoring-agent &> $LOGPIPE &
        echo $! > ${OPENSHIFT_10GENMMSAGENT_DIR}/run/mms-agent.pid
        popd >/dev/null
      else
        client_error ""
        client_error "Missing enviroment variable OPENSHIFT_MMS_API_KEY, which needs to be set before embeding the cartridge"
        client_error "Please run: rhc set-env OPENSHIFT_MMS_API_KEY=YOUR_MMS_API_KEY -a myapp"
        client_error "Your MMS api key is available after registration at https://mms.mongodb.com, in the Settings -> Monitoring Agent section"
        exit 137
      fi
    fi
}

function stop() {
    if [ -f ${OPENSHIFT_10GENMMSAGENT_DIR}/run/mms-agent.pid ]
    then
        echo "Stopping $cartridge_type cartridge"
        mms_agent_pid=`cat ${OPENSHIFT_10GENMMSAGENT_DIR}/run/mms-agent.pid 2> /dev/null`
        kill -9 $mms_agent_pid > /dev/null || :
        rm -f ${OPENSHIFT_10GENMMSAGENT_DIR}/run/mms-agent.pid > /dev/null
    else
        running_process=$(get_process)
        if ps -ef | grep ${running_process} | grep -qv grep > /dev/null 2>&1; then
            echo "Failed to stop 10gen-mms-agent as the pid file is missing!" 1>&2
            exit 1
        else
            echo "The 10-gen-mms-agent is already stopped!" 1>&2
        fi
    fi
}

function restart() {
    stop
    start
}

function reload() {
    restart
}

function tidy() {
  client_message "Emptying 10gen-mms-agent logs in dir: $OPENSHIFT_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_LOG_DIR/10gen-mms-agent.log*
}

case "$1" in
  start)      start ;;
  stop)       stop ;;
  restart)    restart ;;
  status)     status ;;
  reload)     reload ;;
  tidy)      tidy ;;
  *)          exit 0
esac
