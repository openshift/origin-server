#!/bin/bash
set -e
set -x

if ! [ $# -eq 1 ]
then
    echo "Usage: \$0 [start|restart|graceful|graceful-stop|stop|threaddump]"
    exit 1
fi

CART_NAME=jbossews-2.0
CART_DIR=$OPENSHIFT_HOMEDIR/${CART_NAME}
JBOSS_INSTANCE_DIR=${CART_DIR}/${CART_NAME}

JBOSS_PID_FILE="$CART_DIR/run/jboss.pid"

# Kill the process given by $1 and its children
killtree() {
    local _pid=$1
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
        killtree ${_child}
    done
    echo kill -9 ${_pid}
    kill -9 ${_pid}
}

# Check if the jbossas process is running
isrunning() {
    # Check for running app
    if [ -f "$JBOSS_PID_FILE" ]; then
      jbpid=$(cat $JBOSS_PID_FILE);
      running=`/bin/ps --no-headers --pid $jbpid`
      if test -n "$running";
      then
        return 0
      fi
    fi
    # not running
    return 1
}

# Check if the server http port is up
function ishttpup() {
    let count=0
    while [ ${count} -lt 24 ]
    do
        if /usr/sbin/lsof -P -n -i "@${OPENSHIFT_JBOSSEWS_IP}:${OPENSHIFT_JBOSSEWS_HTTP_PORT}" | grep "(LISTEN)" > /dev/null; then
            echo "Found ${OPENSHIFT_JBOSSEWS_IP}:${OPENSHIFT_JBOSSEWS_HTTP_PORT} listening port"
            return 0
        fi
        let count=${count}+1
        sleep 2
    done
    return 1
}

function start_app() {
    # Check for running app
    if isrunning; then
        echo "Application is already running" 1>&2
    else
        # Start
        export CATALINA_HOME=$JBOSS_INSTANCE_DIR
        export CATALINA_BASE=$JBOSS_INSTANCE_DIR
        export CATALINA_TMPDIR=${JBOSS_INSTANCE_DIR}/tmp
        
        ${CART_DIR}/bin/tomcat7 start > ${CART_DIR}/logs/${CART_NAME}.log 2>&1 &
        PROCESS_ID=$!
        
        echo $PROCESS_ID > $JBOSS_PID_FILE
        if ! ishttpup; then
            echo "Timed out waiting for http listening port"
            exit 1
        fi
    fi
}

function stop_app() {
    if ! isrunning; then
        jbpid=$(cat $JBOSS_PID_FILE);
        echo "Application($jbpid) is already stopped" 1>&2
    elif [ -f "$JBOSS_PID_FILE" ]; then
        pid=$(cat $JBOSS_PID_FILE);
        echo "Sending SIGTERM to jboss:$pid ..." 1>&2
        killtree $pid
    else 
        echo "Failed to locate JBOSS PID File" 1>&2
    fi
}

function threaddump() {
    if ! isrunning; then
        echo "Application is stopped"
        exit 1
    elif [ -f "$JBOSS_PID_FILE" ]; then
        pid=$(cat $JBOSS_PID_FILE);
        kill -3 $pid
    else 
        echo "Failed to locate JBOSS PID File"
    fi
}

function tidy {
    rm -rf ${CART_DIR}/logs/* ${CART_DIR}/logs/.[^.]*
    rm -rf ${JBOSS_INSTANCE_DIR}/tmp/* ${JBOSS_INSTANCE_DIR}/tmp/.[^.]*
}

case "$1" in
    start)
        start_app
        exit 0
    ;;
    graceful-stop|stop)
        stop_app
        exit 0
    ;;
    restart|graceful)
        stop_app
        start_app
        exit 0
    ;;
    threaddump)
        threaddump
        exit 0
    ;;
    tidy)
        tidy
        exit 0
    ;;
    status)
        if ! isrunning; then
            echo "The application is either stopped or inaccessible"
            exit 0
        fi

        echo tailing "$CART_DIR/logs/catalina.out"
        echo "------ Tail of JBoss catalina.out ------"
        tail "$CART_DIR/logs/catalina.out"
        exit 0
    ;;
esac
