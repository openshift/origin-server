#!/bin/bash

# Creates a Node instance

# Exit on any errors
set -e

function print_help() {
   echo "Usage: $0 app-name namespace uuid git-url"
   echo "$0 $@" | logger -p local0.notice -t stickshift_nodejs_configure
   exit 1
}

while getopts 'd' OPTION; do
   case $OPTION in
      d)  set -x      ;;
      ?)  print_help  ;;
   esac
done


[ $# -eq 4 -o $# -eq 3 ] || print_help


source "/etc/stickshift/stickshift-node.conf"
app_type="nodejs-0.6"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

setup_configure "$1" $2 $3 $4

check_app_dir_doesnt_exist
unobfuscate_app_home $uuid $namespace $application

# Repo
if [ ! -d $git_url ]; then
	clone_external_git_repo $application $user_id $group_id $uuid $git_url
else
	clone_git_repo $application $user_id $group_id $uuid "Node.js 0.4"
fi

#
# Create the core of the application
#
mkdir -p "$APP_DIR"
pushd "$APP_DIR" > /dev/null
create_standard_app_dirs
mkdir conf node_modules logs sessions
cp $CART_INFO_DIR/configuration/node.env  conf/
popd > /dev/null

# Link the globally installed npm modules in the app's home directory.
pushd "$APP_HOME" > /dev/null
mkdir node_modules
npmgl="$CART_INFO_DIR/configuration/npm_global_module_list"
module_list=$(perl -ne 'print if /^\s*[^#\s]/' "$npmgl" | tr '\n' ' ')
npm link $module_list
popd > /dev/null

#
# Find an open localhost IP
#
IP=`find_open_ip $uid $uuid`

create_app_ctl_script

populate_repo_dir

secure_app_dir

observe_setup_app_and_git_dirs

# npm keeps per-user config in ~/.npmrc and cache in ~/.npm/
# Create files/directories, change ownership and SELinux file security context.
touch "$APP_HOME"/.npmrc
mkdir "$APP_HOME"/.npm
chown $user_id.$group_id -R "$APP_HOME"/.npm "$APP_HOME"/.npmrc

#
# Create environment variables
#
create_standard_env_vars
create_standard_network_env_vars
create_standard_repo_dir_env_var
create_standard_path_env_var

# And prepend to path variable so that Node app_ctl.sh script is called.
sed -i 's#export \s*PATH=#export PATH=$CART_INFO_DIR/bin/:#' $APP_HOME/.env/PATH

#
# Start the server
#
start_app

#
# Create virtualhost definition for apache
#
export CART_INFO_DIR
$CARTRIDGE_BASE_PATH/abstract/info/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP

restart_httpd_graceful

