#!/bin/bash

# Creates a python 2.7 community cartridge instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid git-url"

    echo "$0 $@" | logger -p local0.notice -t openshift_origin_community_python2.7_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 4 -o $# -eq 3 ] || print_help

cartridge_type="python-2.7"
source "/etc/openshift/node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util
source ${CARTRIDGE_BASE_PATH}/$cartridge_type/info/lib/util

setup_configure "$1" $2 $3 $4
disable_cgroups

check_cartridge_dir_doesnt_exist

community_repo="git://github.com/openshift/openshift-community-cartridge-python-2.7.git"

#
# Create the core of the application
#
create_cartridge_instance_dir "$cartridge_type"
cart_instance_dir=$(get_cartridge_instance_dir "$cartridge_type")
pushd "$cart_instance_dir" > /dev/null
mkdir -p logs
mkdir -p .m2/repository
chown -R $user_id .m2/repository
popd > /dev/null

#  Note:  Installing a community cartridge inside this cartridge shell.
install_community_cartridge "$cart_instance_dir" "$application"  \
           "$user_id" "$group_id" "$uuid" "$community_repo" "$git_url"


#
# Find an open localhost IP
#
IP=`find_open_ip $uid $uuid`

populate_repo_dir

secure_app_dir

secure_cart_instance_dir

observe_setup_app_and_git_dirs

observe_setup_cart_instance_dir

#
# Create environment variables
#
create_standard_cart_env_vars
create_standard_env_uservars
create_standard_network_env_vars $IP
create_cart_network_env_vars $IP
create_standard_repo_dir_env_var
create_standard_path_env_var

create_community_cart_network_env_vars "$IP"

echo 'export OPENSHIFT_SYNC_GEARS_DIRS=( "repo" "node_modules" "../.m2" ".openshift" "deployments" "perl5lib" "phplib" )' \
     >$APP_HOME/.env/OPENSHIFT_SYNC_GEARS_DIRS

observe_setup_env_uservars_dir

#  Resolve the application dependencies. Reset git url to the passed parameter
#  value as it gets clobbered over by abstract/lib/util.
git_url=$4
if [ -z "$git_url" ]; then
    start_app
fi

#
# Create virtualhost definition for apache
#
export CART_INFO_DIR
import_env_vars
${CARTRIDGE_BASE_PATH}/abstract/info/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP

client_result "Disclaimer: This is a community supported Python cartridge that provides a way to use/run Python 2.7 on Openshift."
enable_cgroups
