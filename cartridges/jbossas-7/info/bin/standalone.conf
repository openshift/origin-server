# Import Environment Variables
for f in ~/.env/*
do
    . $f
done

cartridge_type="jbossas-7"
CART_DIR=$OPENSHIFT_HOMEDIR/$cartridge_type

source /usr/libexec/stickshift/cartridges/abstract/info/lib/util

# This uses the sun jdk install since the current open-jdk version has a bug
# Once this has been upgrade to something based on 1.6.0_20 or higher,
# such as java-1.6.0-openjdk-1.6.0.0-1.39.1.9.7.el6, require the sun jdk.
if [ -e ${OPENSHIFT_REPO_DIR}.openshift/markers/java7 ];
then
	JAVA_HOME="/usr/lib/jvm/jre-1.7.0"
else
	JAVA_HOME="/usr/lib/jvm/jre-1.6.0"
fi

# Create a link for each file in user config to server standalone/config
if [ -d ${OPENSHIFT_REPO_DIR}.openshift/config ]
then
  for f in ${OPENSHIFT_REPO_DIR}.openshift/config/*
  do
    target=$(basename $f)
    # Remove any target that is being overwritten
    if [ -e "${CART_DIR}/jbossas-7/standalone/configuration/$target" ]
    then
       echo "Removing existing $target"
       rm -rf "${CART_DIR}/jbossas-7/standalone/configuration/$target"
    fi
    ln -s $f "${CART_DIR}/jbossas-7/standalone/configuration/"
  done
fi
# Now go through the standalone/configuration and remove any stale links from previous
# deployments
for f in "${CART_DIR}/jbossas-7/standalone/configuration"/*
do
    target=$(basename $f)
    if [ ! -e $f ]
    then
        echo "Removing obsolete $target"
        rm -rf $f
    fi
done

MYSQL_ENABLED="false"
if [ -n "$OPENSHIFT_MONGODB_DB_URL"]
then
    MYSQL_ENABLED="true"
fi

POSTGRESQL_ENABLED="false"
if [ -n "$OPENSHIFT_POSTGRESQL_DB_URL" ]
then
    POSTGRESQL_ENABLED="true"
fi

sed_replace_env=$(print_sed_exp_replace_env_var)

sed -i -e "s/\${mysql.enabled}/$MYSQL_ENABLED/g" \
       -e "s/\${postgresql.enabled}/$POSTGRESQL_ENABLED/g" \
       -e "s/<loopback-address value=\".*\"\/>/<loopback-address value=\"${OPENSHIFT_INTERNAL_IP}\"\/>/g" \
       ${sed_replace_env} \
       "${CART_DIR}/jbossas-7"/standalone/configuration/standalone.xml > /dev/null 2>&1
       
resource_limits_file=`readlink -f /etc/stickshift/resource_limits.conf`
resource_limits_file_name=`basename $resource_limits_file`
node_profile=`echo ${resource_limits_file_name/*./}`
case "$node_profile" in
    micro)
        memory_options="-client -Xmx100m -XX:MaxPermSize=100m -XX:+AggressiveOpts -Dorg.apache.tomcat.util.LOW_MEMORY=true"
    ;;
    small)
        memory_options="-client -Xmx256m -XX:MaxPermSize=128m -XX:+AggressiveOpts -Dorg.apache.tomcat.util.LOW_MEMORY=true"
    ;;
    medium)
        memory_options="-client -Xmx664m -XX:MaxPermSize=128m -XX:+AggressiveOpts -Dorg.apache.tomcat.util.LOW_MEMORY=true"
    ;;
    large)
        memory_options="-Xmx1456m -XX:MaxPermSize=148m -XX:+AggressiveOpts"
    ;;
    exlarge)
        memory_options="-Xmx2888m -XX:MaxPermSize=184m -XX:+AggressiveOpts"
    ;;
    jumbo)
        memory_options="-Xmx5888m -XX:MaxPermSize=256m -XX:+AggressiveOpts"
    ;;
esac


#
# Specify options to pass to the Java VM.
#
if [ "x$JAVA_OPTS" = "x" ]; then
   JAVA_OPTS="$memory_options -Dorg.jboss.resolver.warning=true -Djava.net.preferIPv4Stack=true -Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=true -Djboss.node.name=${OPENSHIFT_GEAR_DNS} -Djgroups.bind_addr=${OPENSHIFT_INTERNAL_IP}"                                                                                                                                                
fi

# Add the user module path ahead of the server modules root
if [ "x$JBOSS_MODULEPATH_ADD" = "x" ]; then
   export JBOSS_MODULEPATH="${CART_DIR}/jbossas-7"/standalone/configuration/modules:"${CART_DIR}/jbossas-7"/modules
else
   export JBOSS_MODULEPATH="${CART_DIR}/jbossas-7"/standalone/configuration/modules:"${JBOSS_MODULEPATH_ADD}":"${CART_DIR}/jbossas-7"/modules
fi
