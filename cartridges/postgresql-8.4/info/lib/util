#!/bin/bash

[ ! -z "$PSQL_LIB_UTIL" ] && return 0
PSQL_LIB_UTIL=true

# Source the abstract library first and override its definitions below.
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/db "db"

function wait_to_start_db {
    i=0
    while (( PGPASSWORD="$OPENSHIFT_DB_PASSWORD" psql -U $OPENSHIFT_DB_USERNAME -h $OPENSHIFT_DB_HOST -p $OPENSHIFT_DB_PORT -l > /dev/null 2>&1) || [ ! -f ${CART_INSTANCE_DIR}/pid/postgres.pid ]) && [ $i -lt 10 ]
    do
        sleep 1
        i=$(($i + 1))
    done
}


function wait_to_start_db_as_user {
    if [ -n "$OPENSHIFT_DB_USERNAME" ]
    then
        i=0
        sleep 1
        while (( psql -l > /dev/null 2>&1) || [ ! -f ${CART_INSTANCE_DIR}/pid/postgres.pid ]) && [ $i -lt 10 ]
        do
            sleep 1
            i=$(($i + 1))
        done
    fi
}


function prepare_gear_for_standalone_postgresql() {
    # Find an open localhost IP
    IP=`find_open_ip $uid $uuid`

    # Create top level application symlink
    create_app_dir_symlink "$cartridge_type"

    # Create environment variables
    create_common_env_vars

    create_app_ctl_script "$cartridge_type"

    # And prepend to path variable so that postgresql app_ctl.sh script is called.
    sed -i "s#export \s*PATH=#export PATH=$CART_INFO_DIR/bin/:#" $APP_HOME/.env/PATH

    # Add apache vhost configuration.
    export CART_INFO_DIR
    import_env_vars
    $CART_INFO_DIR/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP

    disable_stale_detection

    restart_httpd_graceful
}
