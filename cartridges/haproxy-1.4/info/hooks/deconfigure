#!/bin/bash

# Destroys haproxy instance
CART_NAME="haproxy"
CART_VERSION="1.4"


function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t stickshift_haproxy_deconfigure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done

[ $# -eq 3 ] || print_help

cartridge_type="$CART_NAME-$CART_VERSION"
source /etc/stickshift/stickshift-node.conf
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/git

setup_deconfigure "$1" $2 $3
disable_cgroups

CART_INFO_DIR=${CARTRIDGE_BASE_PATH}/embedded/$cartridge_type/info

source_if_exists "$APP_HOME/.env/OPENSHIFT_APP_NAME"
source_if_exists "$APP_HOME/.env/OPENSHIFT_GEAR_TYPE"
source_if_exists "$APP_HOME/.env/OPENSHIFT_DB_TYPE"

HAPROXY_DIR=$(get_cartridge_instance_dir "$cartridge_type")

#
# Teardown port proxy (ignore failures or missing hook)
#
( ${CART_INFO_DIR}/hooks/conceal-port "$1" $2 $3 ) &>/dev/null || :

# For non-embedded (dedicated) haproxy gear, remove all the proxy ports.
[ "$APP_DIR" -ef "$HAPROXY_DIR" ]  &&  remove_all_proxy_ports $uuid

# Remove PATH override
OLD_PATH=$PATH
source ${GEAR_BASE_DIR}/${uuid}/.env/PATH

# Stop old apps
stop_app
confirm_log_files_inactive "$HAPROXY_DIR/logs"

# Remove PATH override
export PATH=`echo "$PATH" | sed "s,$CART_INFO_DIR/bin/:,,g"`

echo "export PATH=$PATH" > ${GEAR_BASE_DIR}/${uuid}/.env/PATH
export PATH=$OLD_PATH

kill `cat ${HAPROXY_DIR}/run/haproxy.pid`
confirm_pid_gone "${HAPROXY_DIR}/run/haproxy.pid"

# Remove haproxy dir. This MUST be after stopping haproxy as the CTL script relies on these.
rm -rf $HAPROXY_DIR/.ssh
rm_cartridge_instance_dir "$cartridge_type"

rm -rf ${APP_HOME}/.openshift
rm -f /etc/httpd/conf.d/stickshift/${uuid}_${namespace}_${application}/000000_haproxy.conf

if [ "$application" != "$OPENSHIFT_APP_NAME" ]; then
   rm -rf "/etc/httpd/conf.d/stickshift/${uuid}_${namespace}_${OPENSHIFT_APP_NAME}.conf" "/etc/httpd/conf.d/stickshift/${uuid}_${namespace}_${OPENSHIFT_APP_NAME}"
fi

if [ "$APP_DIR" -ef "$HAPROXY_DIR" ]; then
    # For non-embedded (dedicated) haproxy gear, destroy the gear.

    # Destroy git repo.
    destroy_git_repo $application $uuid

    # Blow away the directories.
    rm_app_dir
    rm_unobfuscated_app_home $namespace $application

    # Remove apache vhost configuration.
    rm_httpd_proxy $uuid $namespace $application

    exit 0
fi

# Got here if its haproxy embedded and got removed - so start up all apps with
# the new path (IE: without haproxy)
start_app
enable_cgroups
