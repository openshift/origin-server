#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH
source ${OPENSHIFT_PHP_DIR}usr/lib/php_context

HTTPD_CFG_FILE=$OPENSHIFT_PHP_DIR/configuration/etc/conf/httpd_nolog.conf
HTTPD_CFG_DIR=$OPENSHIFT_PHP_DIR/configuration/etc/conf.d
HTTPD_PASSENV_FILE=$HTTPD_CFG_DIR/passenv.conf
HTTPD_PID_FILE=$OPENSHIFT_PHP_DIR/run/httpd.pid

function start() {
    echo "Starting PHP ${OPENSHIFT_PHP_VERSION} cartridge (Apache+mod_php)"
    write_httpd_passenv $HTTPD_PASSENV_FILE
    oo-erb ${OPENSHIFT_PHP_DIR}conf/performance.conf.erb.hidden > $HTTPD_CFG_DIR/performance.conf
    ensure_valid_httpd_process "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
    php_context "/usr/sbin/httpd -C 'Include $HTTPD_CFG_DIR/*.conf' -f $HTTPD_CFG_FILE -k start" \
      && wait_for_pid_file $HTTPD_PID_FILE
    return $?
}

function reload() {
    echo "Reloading PHP ${OPENSHIFT_PHP_VERSION} cartridge (Apache+mod_php)"
    write_httpd_passenv $HTTPD_PASSENV_FILE
    oo-erb ${OPENSHIFT_PHP_DIR}conf/performance.conf.erb.hidden > $HTTPD_CFG_DIR/performance.conf
    ensure_valid_httpd_process "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
    php_context "/usr/sbin/httpd -C 'Include $HTTPD_CFG_DIR/*.conf' -f $HTTPD_CFG_FILE -k graceful" \
      && wait_for_pid_file $HTTPD_PID_FILE
    return $?
}

function restart() {
    echo "Restarting PHP ${OPENSHIFT_PHP_VERSION} cartridge (Apache+mod_php)"
    write_httpd_passenv $HTTPD_PASSENV_FILE
    oo-erb ${OPENSHIFT_PHP_DIR}conf/performance.conf.erb.hidden > $HTTPD_CFG_DIR/performance.conf
    ensure_valid_httpd_process "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
    ensure_httpd_restart_succeed "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
    php_context "/usr/sbin/httpd -C 'Include $HTTPD_CFG_DIR/*.conf' -f $HTTPD_CFG_FILE -k restart"
    return $?
}

function stop() {
    echo "Stopping PHP ${OPENSHIFT_PHP_VERSION} cartridge (Apache+mod_php)"
    ensure_valid_httpd_process "$HTTPD_PID_FILE" "$HTTPD_CFG_FILE"
    if [ -f "$HTTPD_PID_FILE" ]; then
      # If we still have a PID file, then ensure_valid_httpd_process's call to
      # killall_httpds didn't happen.
      httpd_pid=`cat "$HTTPD_PID_FILE" 2> /dev/null`
      php_context "/usr/sbin/httpd -C 'Include $HTTPD_CFG_DIR/*.conf' -f $HTTPD_CFG_FILE -k stop" \
        && wait_for_stop $httpd_pid
    fi
}

function configtest() {
    echo "Testing Apache *.conf files"
    php_context "/usr/sbin/httpd -C 'Include $HTTPD_CFG_DIR/*.conf' -f $HTTPD_CFG_FILE -t"
    return $?
}

function status() {
   if output=$(curl http://$OPENSHIFT_PHP_IP:$OPENSHIFT_PHP_PORT/server-status?auto 2>&1 )
   then
      client_result "Application is running"
      client_result $output
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function tidy() {
    echo "Emptying log dir: $OPENSHIFT_PHP_LOG_DIR"
    shopt -s dotglob
    rm -rf $OPENSHIFT_PHP_LOG_DIR/* || :
}

function build() {
    # Force clean build (.openshift/markers/force_clean_build)
    if force_clean_build_enabled_for_latest_deployment; then
      echo "Force clean build enabled - recreating PEARs"
      mkdir -p ${OPENSHIFT_PHP_DIR}phplib/pear/{docs,ext,php,cache,cfg,data,download,temp,tests,www}
    fi

    # PEAR
    if [ -f ${OPENSHIFT_REPO_DIR}deplist.txt ]
    then
        echo "Checking deplist.txt for PEAR dependency.."
        for f in $(cat ${OPENSHIFT_REPO_DIR}deplist.txt)
        do
            echo -e "Checking PEAR: $f\n"
            if ! php_context "pear info '$f' >/dev/null"; then
              php_context "pear install --alldeps '$f'"
            else
              php_context "pear upgrade --alldeps '$f'" || :
            fi
            echo
            # Remove gear-specific absolute paths from the generated PEAR
            # files except from the hidden dirs/files (cache, registry etc.)
            find ${OPENSHIFT_PHP_DIR}phplib/pear/pear/ -type f \( ! -regex '.*/\..*' \) \
              -exec sed -i "s|${OPENSHIFT_HOMEDIR}|~/|g" {} \;
        done
    fi
}

case "$1" in
  start)           start ;;
  stop)            stop ;;
  restart)         restart ;;
  reload|graceful) reload ;;
  status)          status ;;
  configtest)      configtest ;;
  tidy)            tidy ;;
  build)           build ;;
  *)               exit 0
esac

exit $?
