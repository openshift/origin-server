#!/bin/bash

# Creates a mongodb instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t stickshift_mongodb_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done

[ $# -eq 3 ] || print_help

CART_NAME="mongodb"
CART_VERSION="2.2"
cartridge_type="$CART_NAME-$CART_VERSION"
source "/etc/stickshift/stickshift-node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

setup_embedded_configure "$1" $2 $3
disable_cgroups

MONGODB_DIR=$(get_cartridge_instance_dir "$cartridge_type")
CART_INFO_DIR=${CARTRIDGE_BASE_PATH}/embedded/$cartridge_type/info
source ${CART_INFO_DIR}/lib/util
source_if_exists "$APP_HOME/.env/OPENSHIFT_APP_NAME"

if [ -f $APP_HOME/.env/OPENSHIFT_NOSQL_DB_TYPE ]; then
    source $APP_HOME/.env/OPENSHIFT_NOSQL_DB_TYPE
    client_error "Only 1 embedded database permitted - application currently has '$OPENSHIFT_NOSQL_DB_TYPE'"
    exit 132
fi

create_cartridge_instance_dir "$cartridge_type"

source_if_exists "$APP_HOME/.env/OPENSHIFT_INTERNAL_IP"
IP=$OPENSHIFT_INTERNAL_IP

# This gear is dedicated to running mongodb - configure it as such.
if [ -z "$IP" ]; then
    prepare_gear_for_standalone_mongodb
fi

#
# Create the core of the application
#

pushd "$MONGODB_DIR" > /dev/null
mkdir -p log etc data socket pid run
sed "s,RHC_MONGODIR,$MONGODB_DIR," $CART_ETC_DIR/mongodb.conf > $MONGODB_DIR/etc/mongodb.conf
sed -i "s,RHC_BIND_ADDR,$IP," $MONGODB_DIR/etc/mongodb.conf
popd > /dev/null

#
# Create simple mongodb start / stop script
#
ln -s $CART_INFO_DIR/bin/mongodb_ctl.sh $MONGODB_DIR/${application}_mongodb_ctl.sh

#
# Setup Permissions
# 

chmod +x "$MONGODB_DIR/"*.sh || error "Failed to chmod new application scripts" 122
chown $user_id.$group_id -R $MONGODB_DIR/ || error "Failed to chown new application space.  Please contact support" 123
# Secure script and root dir (so they can't chown the script"
chown root.root "$MONGODB_DIR" "$MONGODB_DIR"/*.sh
observe_setup_var_lib_dir "$APP_HOME/app-root/"
observe_setup_var_lib_dir "$APP_DIR"
observe_setup_var_lib_dir "$MONGODB_DIR"

export OPENSHIFT_NOSQL_DB_CTL_SCRIPT="$MONGODB_DIR/${application}_mongodb_ctl.sh"
start_db

# Generate a password with no o's O's or 0's
password=$(generate_password)

#
# Setup Environment Variables
#
echo "export OPENSHIFT_NOSQL_DB_USERNAME='admin'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_USERNAME
echo "export OPENSHIFT_NOSQL_DB_PASSWORD='$password'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PASSWORD
echo "export OPENSHIFT_NOSQL_DB_TYPE='mongodb'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_TYPE
echo "export OPENSHIFT_NOSQL_DB_HOST='$IP'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_HOST
echo "export OPENSHIFT_NOSQL_DB_PORT='27017'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PORT
echo "export OPENSHIFT_NOSQL_DB_URL='mongodb://admin:$password@$IP:27017/'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_URL
echo "export OPENSHIFT_NOSQL_DB_CTL_SCRIPT='$MONGODB_DIR/${application}_mongodb_ctl.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_CTL_SCRIPT
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP='$CART_INFO_DIR/bin/mongodb_dump.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP_CLEANUP='$CART_INFO_DIR/bin/mongodb_cleanup.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP_CLEANUP
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_RESTORE='$CART_INFO_DIR/bin/mongodb_restore.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_RESTORE
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_EMBEDDED_TYPE='mongodb-2.2'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_EMBEDDED_TYPE

## Setup user
source_if_exists "$APP_HOME/.env/OPENSHIFT_APP_NAME"
DB_NAME=${OPENSHIFT_APP_NAME:-$application}
echo "use admin
      db.addUser(\"admin\", \"${password}\")
      db.auth(\"admin\", \"${password}\")
      db.system.users.find()
      use $DB_NAME
      db.openshift.save({application: \"$DB_NAME\", dbhost: \"$IP\" })
      db.addUser(\"admin\", \"${password}\")
      exit
     "  | mongo $IP
rm -f /tmp/.dbshell

mongodb_ip="$IP"
mongodb_port="27017"
if is_a_scalable_app; then
   if $(dirname "$0")/expose-port "$@"; then
       source $APP_HOME/.env/OPENSHIFT_GEAR_DNS
       source $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PROXY_PORT
       mongodb_ip=${OPENSHIFT_GEAR_DNS:-"$IP"}
       mongodb_port=${OPENSHIFT_NOSQL_DB_PROXY_PORT:-27017}
   fi
fi

client_result ""
client_result "MongoDB 2.0 database added.  Please make note of these credentials:"
client_result ""
client_result "       Root User: admin"
client_result "   Root Password: $password"
client_result "   Database Name: $DB_NAME"
client_result ""

if is_a_scalable_app; then
    source $APP_HOME/.env/OPENSHIFT_NOSQL_DB_HOST
    client_result "Connection URL: mongodb://$mongodb_ip:$mongodb_port/"
    client_result "MongoDB gear-local connection URL: mongodb://$OPENSHIFT_NOSQL_DB_HOST:$mongodb_port/"
    client_result ""
else
    client_result "Connection URL: mongodb://$IP:$mongodb_port/"
    client_result ""
    client_result "You can manage your new MongoDB by also embedding rockmongo-1.1"
fi

cart_props "connection_url=mongodb://$mongodb_ip:$mongodb_port/"
cart_props "username=admin"
cart_props "password=$password"
cart_props "database_name=$DB_NAME"

set_app_info "Connection URL: mongodb://$mongodb_ip:$mongodb_port/"
enable_cgroups
