#!/bin/bash -e
set -u
set -x

function obfuscate_password {
    password="$1"
    acegi_security_path=`find ${OPENSHIFT_DATA_DIR}/war/WEB-INF/lib/ -name acegi-security-*.jar`
    commons_codec_path=`find ${OPENSHIFT_DATA_DIR}/war/WEB-INF/lib/ -name commons-codec-*.jar`

    java -classpath "${acegi_security_path}:${commons_codec_path}:${OPENSHIFT_JENKINS_DIR}/configuration/password-encoder.jar" com.redhat.openshift.PasswordEncoder $password
}

function observe_setup_var_lib_dir {
	uid=$(id -u "${OPENSHIFT_APP_UUID}")
	mcs_level=`oo-get-mcs-level $uid`
	
    if [ -e "$1" ]
    then
        PATH=$PATH:/usr/sbin:/sbin restorecon -R $1
        chcon -l $mcs_level -R $1
    else
        warning "The dir does not exist: $1"
    fi
}

function generate_ssh_keys {
    mkdir -p ${OPENSHIFT_DATA_DIR}/.ssh/
    ssh-keygen -N '' -f ${OPENSHIFT_DATA_DIR}/.ssh/jenkins_id_rsa > /dev/null

    chown ${OPENSHIFT_APP_UUID}.${OPENSHIFT_APP_UUID} -R "${OPENSHIFT_DATA_DIR}/.ssh/"
    chmod 0750 "${OPENSHIFT_DATA_DIR}/.ssh/"
    chmod 0640 "${OPENSHIFT_DATA_DIR}/.ssh/jenkins_id_rsa"
    chmod 0640 "${OPENSHIFT_DATA_DIR}/.ssh/jenkins_id_rsa.pub"
    observe_setup_var_lib_dir "${OPENSHIFT_DATA_DIR}/.ssh/"
}

function add_broker_auth_key {
    echo "BROKER_AUTH_KEY_ADD: "
}

function add_ssh_key {
    echo "SSH_KEY_ADD: $1"
}

function generate_password {
    head -n 50 /dev/urandom|tr -dc "a-np-zA-NP-Z1-9-_"|fold -w 12 | grep -v '^-' | head -n1
}

PATH=/bin:/usr/bin:$PATH
BROKER_HOST=localhost

cartridge_type="jenkins"

version=1.4
OPENSHIFT_JENKINS_DIR="${OPENSHIFT_HOMEDIR}$cartridge_type"
echo "export OPENSHIFT_JENKINS_VERSION='$version'" > "$OPENSHIFT_JENKINS_DIR/env/OPENSHIFT_JENKINS_VERSION"
echo "export OPENSHIFT_JENKINS_DIR='$OPENSHIFT_JENKINS_DIR'" > "$OPENSHIFT_JENKINS_DIR/env/OPENSHIFT_JENKINS_DIR"

# Create additional directories required by JENKINS
mkdir -p ${OPENSHIFT_JENKINS_DIR}/{bin,template,configuration,logs,data}

# Copy the version specific files up to jbosseap directory
cp -r ${OPENSHIFT_JENKINS_DIR}/versions/${version}/configuration/* ${OPENSHIFT_JENKINS_DIR}/configuration
cp -r ${OPENSHIFT_JENKINS_DIR}/versions/${version}/metadata/* ${OPENSHIFT_JENKINS_DIR}/metadata
cp -r ${OPENSHIFT_JENKINS_DIR}/versions/${version}/template/* ${OPENSHIFT_JENKINS_DIR}/template
cp -r ${OPENSHIFT_JENKINS_DIR}/versions/${version}/template/.openshift ${OPENSHIFT_JENKINS_DIR}/template

if [ -e ${OPENSHIFT_REPO_DIR}/.openshift/markers/java7 ];
then
	JAVA_HOME=/etc/alternatives/java_sdk_1.7.0
else
	JAVA_HOME=/etc/alternatives/java_sdk_1.6.0
fi

echo "export JAVA_HOME=$JAVA_HOME" > $OPENSHIFT_JENKINS_DIR/env/JAVA_HOME
echo "export PATH=$JAVA_HOME/bin:$PATH" > $OPENSHIFT_JENKINS_DIR/env/PATH

generate_ssh_keys

public_key=$(cat ${OPENSHIFT_DATA_DIR}/.ssh/jenkins_id_rsa.pub)
set -- $public_key
add_ssh_key "$2"

add_broker_auth_key

admin_password=$(generate_password)
system_builder_password=$(generate_password)

cp -ad "${OPENSHIFT_JENKINS_DIR}/configuration/"* "${OPENSHIFT_DATA_DIR}"
openshift_server=`echo "${BROKER_HOST}" | sed -e "s/\/*$//" `
sed -i "s,OPENSHIFT_SERVER,$openshift_server,g" "${OPENSHIFT_DATA_DIR}/config.xml"
unzip -q /usr/lib/jenkins/jenkins.war -d "${OPENSHIFT_DATA_DIR}/war/"
admin_password_hash=`obfuscate_password $admin_password`
sed -i "s,PASSWORD,$admin_password_hash,g" "${OPENSHIFT_DATA_DIR}/users/admin/config.xml"
system_builder_password_hash=`obfuscate_password $system_builder_password`
sed -i "s,PASSWORD,$system_builder_password_hash,g" "${OPENSHIFT_DATA_DIR}/users/system_builder/config.xml"
echo $system_builder_password > ${OPENSHIFT_JENKINS_DIR}/.jenkins_password

export JENKINS_USERNAME=system_builder
export JENKINS_PASSWORD=$system_builder_password







