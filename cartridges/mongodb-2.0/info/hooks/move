#!/bin/bash

# Move to a new ip

# Exit on any errors
set -e

source "/etc/stickshift/stickshift-node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/apache
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/network

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done

[ $# -eq 3 ] || print_help

namespace=`basename $2`
application="$1"
uuid=$3

cartridge_type="mongodb-2.0"
setup_basic_vars

CART_INFO_DIR=${CARTRIDGE_BASE_PATH}/embedded/$cartridge_type/info
CART_ETC_DIR=$CART_INFO_DIR/configuration/etc
source ${CART_INFO_DIR}/lib/util

MONGODB_DIR="$APP_HOME/$cartridge_type"

observe_setup_var_lib_dir "$MONGODB_DIR"

source_if_exists "$APP_HOME/.env/OPENSHIFT_INTERNAL_IP"
IP=$OPENSHIFT_INTERNAL_IP

# This gear is dedicated to running mongodb - configure it as such.
if [ -z "$IP" ]; then
    prepare_gear_for_standalone_mongodb
else
    . $APP_HOME/.env/OPENSHIFT_INTERNAL_IP
    IP=`find_open_ip $uid $uuid`
    if [ "$IP" != "$OPENSHIFT_INTERNAL_IP" ]; then 
       echo "export OPENSHIFT_INTERNAL_IP='$IP'" > $APP_HOME/.env/OPENSHIFT_INTERNAL_IP
    fi

    . $APP_HOME/.env/OPENSHIFT_APP_NAME
    if [ ! -d "$GEAR_BASE_DIR/$uuid/$OPENSHIFT_APP_NAME" ]; then
        #  This gear is dedicated to running mongo - configure it as such.
        export CART_INFO_DIR
        observe_setup_app_home
        import_env_vars
        $CART_INFO_DIR/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP
        restart_httpd_graceful
    fi
fi 

#
# Create simple mongodb start / stop script
#
ln -sf $CART_INFO_DIR/bin/mongodb_ctl.sh $MONGODB_DIR/${application}_mongodb_ctl.sh

#
# Fix permissions
#
old_uuid=$(stat -c %U $MONGODB_DIR/etc)
if [ ! "$old_uuid" == "$uuid" ]; then
    pushd "$MONGODB_DIR" > /dev/null
    chown -cR --from=$old_uuid.$old_uuid $uuid.$uuid * > /dev/null
    popd > /dev/null
fi

#
# Source database connection variables
#
if [ -d $MONGODB_DIR/.env ]; then
    . $MONGODB_DIR/.env/OPENSHIFT_NOSQL_DB_HOST
    . $MONGODB_DIR/.env/OPENSHIFT_NOSQL_DB_PORT
    . $MONGODB_DIR/.env/OPENSHIFT_NOSQL_DB_PASSWORD
    . $MONGODB_DIR/.env/OPENSHIFT_NOSQL_DB_USERNAME
    rm -rf $MONGODB_DIR/.env
else
    . $APP_HOME/.env/OPENSHIFT_NOSQL_DB_HOST
    . $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PORT
    . $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PASSWORD
    . $APP_HOME/.env/OPENSHIFT_NOSQL_DB_USERNAME
fi

ORIG_DB_HOST=$OPENSHIFT_NOSQL_DB_HOST

#
# Setup environment variables
#
echo "export OPENSHIFT_NOSQL_DB_USERNAME='$OPENSHIFT_NOSQL_DB_USERNAME'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_USERNAME
echo "export OPENSHIFT_NOSQL_DB_PASSWORD='$OPENSHIFT_NOSQL_DB_PASSWORD'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PASSWORD
echo "export OPENSHIFT_NOSQL_DB_TYPE='mongodb'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_TYPE
echo "export OPENSHIFT_NOSQL_DB_HOST='$IP'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_HOST
echo "export OPENSHIFT_NOSQL_DB_PORT='27017'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PORT
echo "export OPENSHIFT_NOSQL_DB_URL='mongodb://$OPENSHIFT_NOSQL_DB_USERNAME:$OPENSHIFT_NOSQL_DB_PASSWORD@$IP:27017/'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_URL
echo "export OPENSHIFT_NOSQL_DB_CTL_SCRIPT='$MONGODB_DIR/${application}_mongodb_ctl.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_CTL_SCRIPT
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP='$CART_INFO_DIR/bin/mongodb_dump.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP_CLEANUP='$CART_INFO_DIR/bin/mongodb_cleanup.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP_CLEANUP
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_RESTORE='$CART_INFO_DIR/bin/mongodb_restore.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_RESTORE
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_EMBEDDED_TYPE='mongodb-2.0'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_EMBEDDED_TYPE

#
# Fix config file
#
sed -i "s,$ORIG_DB_HOST,$IP," $MONGODB_DIR/etc/mongodb.conf
sed -i "s,$old_uuid,$uuid," $MONGODB_DIR/etc/mongodb.conf

set_app_info "Connection URL: mongodb://$IP:27017/"
