Name: mongodb-2.0
Display-Name: MongoDB v2.0.0 (x86-64)
Description: "MongoDB is an open source, document-oriented database designed for both scalability and ease of development"
Version: 2.0.0
License: ASL 2.0
License-Url: http://www.apache.org/licenses/LICENSE-2.0.txt
Vendor: 10gen
Categories:
  - cartridge
  - database
  - nosql
Website: http://www.10gen.com
Help-Topics:
  - "Building with MongoDB" : https://openshift.redhat.com/community/developers/mongodb
Cart-Data:
  - Key: "username"
    Type: cart_data
    Description: "Root user on mongo database"
  - Key: "password"
    Type: cart_data
    Description: "Password for root user on mongo database"
  - Key: database_name
    Type: cart_data
    Description: "Mongo DB name"
  - Key: connection_url
    Type: cart_data
    Description: "Mongo DB connection URL"
Suggests:
  - 10gen-mms-agent-0.1
  - rockmongo

Provides:
  - "mongodb"
  - "mongodb(version) = 2.0.0"
Requires:
Conflicts:
Native-Requires:
  - mongodb-server
  - mongodb-devel
  - libmongodb
  - mongodb
Architecture: x86-64
Reservations:
  - MEM >= 1GB
Profiles:
  basic:
    Provides: mongodb-basic-mode
    Reservations:
      - MEM >= 100MB
    Components:
      mongod:
        Publishes:
          publish-nosql-db-connection-info:
            Type: "NET_TCP:nosqldb:connection-info"
          get-db-connection-info:
            Type: "NET_TCP:db:connection-info"
          get-mongo-connection-info:
            Type: "NET_TCP:db:mongodb"
    Groups:
      singlenode:
        Components:
           mongod-process: mongod
        Scaling:
          Min: 1
          Max: 1
  replica-sets:
    Provides: mongodb-replica-sets
    Reservations:
      - MEM >= 1GB
    Components:
      router:
        Subscribes:
          set-replicaset:
            Type: "NET_TCP:db:mongodb:replica-servers"
          set-doc-root: # Best-practices: run router where appserver runs.
            Type: "FILESYSTEM:doc-root"
      configsvr:
        Publishes:
          get-replicaset:
            Type: "NET_TCP:db:mongodb:replica-servers"
          get-arbiter:
            Type: "NET_TCP:db:mongodb:arbiter"
          get-db-connection-info:
            Type: "NET_TCP:db:connection-info"
          get-mongo-connection-info:
            Type: "NET_TCP:db:mongodb"
        Subscribes:
          set-replicaset-member:
            Type: "NET_TCP:db:mongodb:replica"
      replicaset_member:
        Publishes:
          get-replicaset-member:
            Type: "NET_TCP:db:mongodb:replica"
    Groups:
      arbiter:
        Components:
          arbiter_config_server: configsvr
          arbiter_replica: replicaset_member
        Scaling:
          Min: 1
          Max: 1
      config_servers:
        Components:
          config_server: configsvr
      routers:
        Components:
          router: router
      replica_set:
        Components:
          replica: replicaset_member
        Scaling:
          Min: 2
          Max: -1
    Connections:
      arbiter-config-server-router-connections:
        Components:
          - arbiter_config_server
          - router
      arbiter-replica-config-server-connections:
        Components:
          - arbiter_replica
          - arbiter_config_server
      config-server-router-connections:
        Components:
          - config_server
          - router
      replica-set-config-server-connections:
        Components:
          - replica
          - config_server
    Start-Order: [arbiter_config_server, arbiter_replica, config_server, router, replica]
    Group-Overrides: [ config_servers == replica_set ]

  master-slave:
    Provides: mongodb-master-slave
    Components:
      master:
        Publishes:
          get-master:
            Type: "NET_TCP:db:mongodb:master"
          get-db-connection-info:
            Type: "NET_TCP:db:connection-info"
          get-mongo-connection-info:
            Type: "NET_TCP:db:mongodb"
        Subscribes:
          set-slave:
            Type: "NET_TCP:db:mongodb:slave"
      slave:
        Publishes:
          get-slave:
            Type: "NET_TCP:db:mongodb:slave"
          get-db-connection-info:
            Type: "NET_TCP:db:connection-info"
        Subscribes:
          set-master:
            Type: "NET_TCP:db:mongodb:master"
    Groups:
      master:
        Components:
          master: master
        Scaling:
          Min: 1
          Max: 1
      slaves:
        Components:
          slaves: slave
    Connections:
      master-slave-connections:
        Components:
          - master
          - slaves
    Start-Order: [master, slaves]
Default-Profile: basic
