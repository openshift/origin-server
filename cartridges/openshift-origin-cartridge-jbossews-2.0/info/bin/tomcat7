#!/bin/bash

source "/etc/openshift/node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

function replace_envs() {
	sed_replace_env=$(print_sed_exp_replace_env_var)

	sed -i ${sed_replace_env} "${CATALINA_BASE}/conf/server.xml" > /dev/null 2>&1
}

# Create a link for each file in user config to server standalone/config
if [ -d ${OPENSHIFT_REPO_DIR}.openshift/config ]
then
  for f in ${OPENSHIFT_REPO_DIR}.openshift/config/*
  do
    target=$(basename $f)
    # Remove any target that is being overwritten
    if [ -e "${CATALINA_BASE}/conf/$target" ]
    then
       echo "Removing existing $target"
       rm -rf "${CATALINA_BASE}/conf/$target"
    fi
    ln -s $f "${CATALINA_BASE}/conf"
  done
fi
# Now go through the standalone/configuration and remove any stale links from previous
# deployments
for f in ${CATALINA_BASE}/conf/*
do
    target=$(basename $f)
    if [ ! -e $f ]
    then
        echo "Removing obsolete $target"
        rm -rf $f
    fi
done

replace_envs

max_memory_bytes=`oo-cgroup-read memory.limit_in_bytes`
max_threads=`ulimit -u`

if [ "x$JVM_HEAP_RATIO" = "x" ]; then
	JVM_HEAP_RATIO=0.5
fi
if [ "x$JVM_PERMGEN_RATIO" = "x" ]; then
	JVM_PERMGEN_RATIO=0.2
fi

max_memory_mb=`expr $max_memory_bytes / 1048576`
max_heap=`echo $( echo "$max_memory_mb * $JVM_HEAP_RATIO" | bc )|awk '{print int($1+0.5)}'`
max_permgen=`echo $( echo "$max_memory_mb * $JVM_PERMGEN_RATIO" | bc )|awk '{print int($1+0.5)}'`

if [ $max_permgen -gt 256 ]
then
	max_permgen=256
fi

memory_options="-Xmx${max_heap}m -XX:MaxPermSize=${max_permgen}m -XX:+AggressiveOpts" 

#
# Specify options to pass to the Java VM.
#
if [ "x$JAVA_OPTS" = "x" ]; then
   JAVA_OPTS="$memory_options -Djava.util.logging.config.file=$CATALINA_BASE/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.net.preferIPv4Stack=true -Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=true"                                                                                                                                    

   if [ -f "${OPENSHIFT_REPO_DIR}/.openshift/markers/enable_jpda" ]; then
   	  JAVA_OPTS="$JAVA_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,address=$OPENSHIFT_INTERNAL_IP:8787,server=y,suspend=n"
   fi
fi

if [ -e ${OPENSHIFT_REPO_DIR}.openshift/markers/java7 ];
then
	JAVA_HOME="/usr/lib/jvm/jre-1.7.0"
else
	JAVA_HOME="/usr/lib/jvm/jre-1.6.0"
fi


JAVACMD=$JAVA_HOME/bin/java

# CLASSPATH munging
if [ -n "$JSSE_HOME" ]; then
  CLASSPATH="${CLASSPATH}:$(build-classpath jcert jnet jsse 2>/dev/null)"
fi
CLASSPATH="${CLASSPATH}:${CATALINA_HOME}/bin/bootstrap.jar"
CLASSPATH="${CLASSPATH}:${CATALINA_HOME}/bin/commons-logging-tomcat-juli.jar"
CLASSPATH="${CLASSPATH}:${CATALINA_HOME}/bin/tomcat-juli.jar"
CLASSPATH="${CLASSPATH}:$(build-classpath commons-daemon 2>/dev/null)"

if [ "$1" = "start" ]; then
  ${JAVACMD} $JAVA_OPTS $LOGGING_CONFIG $CATALINA_OPTS \
    -classpath "$CLASSPATH" \
    -Dcatalina.base="$CATALINA_BASE" \
    -Dcatalina.home="$CATALINA_HOME" \
    -Djava.endorsed.dirs="$JAVA_ENDORSED_DIRS" \
    -Djava.io.tmpdir="$CATALINA_TMPDIR" \
    org.apache.catalina.startup.Bootstrap start \
    >> ${CATALINA_BASE}/logs/catalina.out 2>&1 &
    if [ ! -z "$CATALINA_PID" ]; then
      echo $! > $CATALINA_PID
    fi
elif [ "$1" = "start-security" ]; then
  ${JAVACMD} $JAVA_OPTS $LOGGING_CONFIG $CATALINA_OPTS \
    -classpath "$CLASSPATH" \
    -Dcatalina.base="$CATALINA_BASE" \
    -Dcatalina.home="$CATALINA_HOME" \
    -Djava.endorsed.dirs="$JAVA_ENDORSED_DIRS" \
    -Djava.io.tmpdir="$CATALINA_TMPDIR" \
    -Djava.security.manager \
    -Djava.security.policy=="${CATALINA_BASE}/conf/catalina.policy" \
    org.apache.catalina.startup.Bootstrap start \
    >> ${CATALINA_BASE}/logs/catalina.out 2>&1 &
    if [ ! -z "$CATALINA_PID" ]; then
      echo $! > $CATALINA_PID
    fi
elif [ "$1" = "stop" ]; then
  ${JAVACMD} $JAVA_OPTS $LOGGING_CONFIG \
    -classpath "$CLASSPATH" \
    -Dcatalina.base="$CATALINA_BASE" \
    -Dcatalina.home="$CATALINA_HOME" \
    -Djava.endorsed.dirs="$JAVA_ENDORSED_DIRS" \
    -Djava.io.tmpdir="$CATALINA_TMPDIR" \
    org.apache.catalina.startup.Bootstrap stop \
    >> ${CATALINA_BASE}/logs/catalina.out 2>&1
elif [ "$1" = "version" ]; then
  ${JAVACMD} -classpath ${CATALINA_HOME}/lib/catalina.jar \
    org.apache.catalina.util.ServerInfo
else
  echo "Usage: $0 {start|start-security|stop|version}"
  exit 1
fi
