#!/bin/bash

# Creates a mongodb instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t openshift_origin_mongodb_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done

[ $# -eq 3 ] || print_help

CART_NAME="mongodb"
CART_VERSION="2.2"
cartridge_type="$CART_NAME-$CART_VERSION"
source "/etc/openshift/node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

setup_embedded_configure "$1" $2 $3
disable_cgroups

MONGODB_DIR=$(get_cartridge_instance_dir "$cartridge_type")
CART_INFO_DIR=${CARTRIDGE_BASE_PATH}/embedded/$cartridge_type/info
source ${CART_INFO_DIR}/lib/util
source_if_exists "$APP_HOME/.env/OPENSHIFT_APP_NAME"
source_if_exists "$APP_HOME/.env/OPENSHIFT_HOMEDIR"

create_cartridge_instance_dir "$cartridge_type"

# This gear is dedicated to running mongodb - configure it as such.
if only_cart_on_gear $cartridge_type; then
    prepare_gear_for_standalone_mongodb
fi

MONGODB_PORT=27017
MONGODB_IP=`find_open_ip $uid $uuid $MONGODB_PORT`

#
# Create the core of the application
#

pushd "$MONGODB_DIR" > /dev/null
mkdir -p log etc data socket pid run
sed "s,RHC_MONGODIR,$MONGODB_DIR," $CART_ETC_DIR/mongodb.conf > $MONGODB_DIR/etc/mongodb.conf
sed -i "s,RHC_BIND_ADDR,$MONGODB_IP," $MONGODB_DIR/etc/mongodb.conf
popd > /dev/null

#
# Setup Permissions
# 

chown $user_id.$group_id -R $MONGODB_DIR/ || error "Failed to chown new application space.  Please contact support" 123
chown root.root "$MONGODB_DIR" 
observe_setup_var_lib_dir "$APP_HOME/app-root/"
observe_setup_var_lib_dir "$APP_DIR"
observe_setup_var_lib_dir "$MONGODB_DIR"

start_database

# Generate a password with no o's O's or 0's
password=$(generate_password)

#
# Setup Environment Variables
#
echo "export OPENSHIFT_MONGODB_DB_USERNAME='admin'" > $APP_HOME/.env/OPENSHIFT_MONGODB_DB_USERNAME
echo "export OPENSHIFT_MONGODB_DB_PASSWORD='$password'" > $APP_HOME/.env/OPENSHIFT_MONGODB_DB_PASSWORD
echo "export OPENSHIFT_MONGODB_DB_HOST='$MONGODB_IP'" > $APP_HOME/.env/OPENSHIFT_MONGODB_DB_HOST
echo "export OPENSHIFT_MONGODB_DB_PORT='$MONGODB_PORT'" > $APP_HOME/.env/OPENSHIFT_MONGODB_DB_PORT
echo "export OPENSHIFT_MONGODB_DB_URL='mongodb://admin:$password@$MONGODB_IP:$MONGODB_PORT/'" > $APP_HOME/.env/OPENSHIFT_MONGODB_DB_URL
echo "export OPENSHIFT_MONGODB_DB_LOG_DIR='$MONGODB_DIR/log'" > $APP_HOME/.env/OPENSHIFT_MONGODB_DB_LOG_DIR

## Setup user
source_if_exists "$APP_HOME/.env/OPENSHIFT_APP_NAME"
DB_NAME=${OPENSHIFT_APP_NAME:-$application}
echo "use admin
      db.addUser(\"admin\", \"${password}\")
      db.auth(\"admin\", \"${password}\")
      db.system.users.find()
      use $DB_NAME
      db.openshift.save({application: \"$DB_NAME\", dbhost: \"$MONGODB_IP\" })
      db.addUser(\"admin\", \"${password}\")
      exit
     "  | mongo $MONGODB_IP
rm -f /tmp/.dbshell

mongodb_ip="$MONGODB_IP"
mongodb_port="$MONGODB_PORT"

source $APP_HOME/.env/OPENSHIFT_APP_UUID
container_uuid=$3

if is_a_scalable_app; then
   if /usr/bin/oo-create-endpoints --with-app-uuid $OPENSHIFT_APP_UUID --with-container-uuid $container_uuid --cart-name $cartridge_type; then
       source $APP_HOME/.env/OPENSHIFT_GEAR_DNS
       source $APP_HOME/.env/OPENSHIFT_MONGODB_DB_PROXY_PORT
       if [ -n "$OPENSHIFT_GEAR_DNS" ]; then
         mongodb_ip=$OPENSHIFT_GEAR_DNS
       fi
       if [ -n "$OPENSHIFT_MONGODB_DB_PROXY_PORT" ]; then
         mongodb_port=$OPENSHIFT_MONGODB_DB_PROXY_PORT
       fi
   fi
fi

client_result ""
client_result "MongoDB 2.2 database added.  Please make note of these credentials:"
client_result ""
client_result "       Root User: admin"
client_result "   Root Password: $password"
client_result "   Database Name: $DB_NAME"
client_result ""

if is_a_scalable_app; then
    client_result 'Connection URL: mongodb://$OPENSHIFT_MONGODB_DB_HOST:$OPENSHIFT_MONGODB_DB_PORT/'
    client_result 'MongoDB gear-local connection URL: mongodb://$OPENSHIFT_MONGODB_DB_HOST:$OPENSHIFT_MONGODB_DB_PORT/'
    client_result ""
else
    client_result 'Connection URL: mongodb://$OPENSHIFT_MONGODB_DB_HOST:$OPENSHIFT_MONGODB_DB_PORT/'
    client_result ""
    client_result "You can manage your new MongoDB by also embedding rockmongo-1.1"
    client_result "The rockmongo username and password will be the same as the MongoDB credentials above."
fi

cart_props 'connection_url=mongodb://$OPENSHIFT_MONGODB_DB_HOST:$OPENSHIFT_MONGODB_DB_PORT/'
cart_props "username=admin"
cart_props "password=$password"
cart_props "database_name=$DB_NAME"

set_app_info "Connection URL: mongodb://$mongodb_ip:$mongodb_port/"
enable_cgroups
 
