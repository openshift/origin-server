#!/bin/bash

# Creates a perl instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid git-url"

    echo "$0 $@" | logger -p local0.notice -t stickshift_perl_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 4 -o $# -eq 3 ] || print_help

source "/etc/stickshift/stickshift-node.conf"
app_type="perl-5.10"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

setup_configure "$1" $2 $3 $4

check_app_dir_doesnt_exist
unobfuscate_app_home $uuid $namespace $application

# Repo
if [ ! -d $git_url ]; then
	clone_external_git_repo $application $user_id $group_id $uuid $git_url
else
	clone_git_repo $application $user_id $group_id $uuid "perl 5.10"
fi

#
# Create the core of the application
#

mkdir -p "$APP_DIR"
pushd "$APP_DIR" > /dev/null
create_standard_app_dirs
mkdir conf conf.d logs perl5lib ../.cpanm
ln -s /usr/lib64/httpd/modules modules
ln -s /etc/httpd/conf/magic conf/magic
popd > /dev/null

#
# Find an open localhost IP
#
IP=`find_open_ip $uid $uuid`

$CART_INFO_DIR/bin/deploy_httpd_config.sh $application $uuid $IP

create_app_ctl_script

populate_repo_dir

secure_app_dir
chown $user_id.$group_id -R $APP_DIR/../.cpanm/ || error "Failed to chown new application space.  Please contact support" 123

secure_conf_dirs

observe_setup_app_and_git_dirs

#
# Create environment variables
#
create_standard_env_vars
create_standard_network_env_vars
create_standard_repo_dir_env_var
create_standard_path_env_var

#
# Start the server
#
start_app

#
# Create virtualhost definition for apache
#
export CART_INFO_DIR
$CARTRIDGE_BASE_PATH/abstract/info/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP

restart_httpd_graceful

