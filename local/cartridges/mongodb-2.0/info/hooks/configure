#!/bin/bash

# Creates a mongodb instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t stickshift_mongodb_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 3 ] || print_help

source "/etc/stickshift/stickshift-node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util
CART_INFO_DIR=${CARTRIDGE_BASE_PATH}/embedded/mongodb-2.0/info

app_type="mongodb-2.0"
setup_embedded_configure "$1" $2 $3

source ${CART_INFO_DIR}/lib/util

MONGODB_DIR="$APP_HOME/mongodb-2.0/"

#
# Detect IP
. $APP_HOME/.env/OPENSHIFT_INTERNAL_IP
IP=$OPENSHIFT_INTERNAL_IP

#
# Create the core of the application
#

if [ -d "$MONGODB_DIR" ]
then
    client_error "Embedded mongodb-2.0 already attached to $application"
    exit 132
fi
mkdir -p "$MONGODB_DIR"
pushd "$MONGODB_DIR" > /dev/null
mkdir -p log etc data socket pid run
sed "s,RHC_MONGODIR,$MONGODB_DIR," $CART_ETC_DIR/mongodb.conf > $MONGODB_DIR/etc/mongodb.conf
sed -i "s,RHC_BIND_ADDR,$IP," $MONGODB_DIR/etc/mongodb.conf
popd > /dev/null

#
# Create simple mongodb start / stop script
#
ln -s $CART_INFO_DIR/bin/mongodb_ctl.sh $MONGODB_DIR/${application}_mongodb_ctl.sh

#
# Setup Permissions
# 

chmod +x "$MONGODB_DIR/"*.sh || error "Failed to chmod new application scripts" 122
chown $user_id.$group_id -R $MONGODB_DIR/ || error "Failed to chown new application space.  Please contact support" 123
# Secure script and root dir (so they can't chown the script"
chown root.root "$MONGODB_DIR" "$MONGODB_DIR"/*.sh
observe_setup_var_lib_dir "$MONGODB_DIR"


start_mongodb

# Generate a password with no o's O's or 0's
password=$(generate_password)

#
# Setup Environment Variables
#
echo "export OPENSHIFT_NOSQL_DB_USERNAME='admin'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_USERNAME
echo "export OPENSHIFT_NOSQL_DB_PASSWORD='$password'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PASSWORD
echo "export OPENSHIFT_NOSQL_DB_TYPE='mongodb'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_TYPE
echo "export OPENSHIFT_NOSQL_DB_HOST='$IP'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_HOST
echo "export OPENSHIFT_NOSQL_DB_PORT='27017'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_PORT
echo "export OPENSHIFT_NOSQL_DB_URL='mongodb://admin:$password@$IP:27017/'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_URL
echo "export OPENSHIFT_NOSQL_DB_CTL_SCRIPT='$MONGODB_DIR/${application}_mongodb_ctl.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_CTL_SCRIPT
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP='$CART_INFO_DIR/bin/mongodb_dump.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP_CLEANUP='$CART_INFO_DIR/bin/mongodb_cleanup.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_DUMP_CLEANUP
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_RESTORE='$CART_INFO_DIR/bin/mongodb_restore.sh'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_RESTORE
echo "export OPENSHIFT_NOSQL_DB_MONGODB_20_EMBEDDED_TYPE='mongodb-2.0'" > $APP_HOME/.env/OPENSHIFT_NOSQL_DB_MONGODB_20_EMBEDDED_TYPE

## Setup user
echo "use admin
      db.addUser(\"admin\", \"${password}\")
      db.auth(\"admin\", \"${password}\")
      db.system.users.find()
      use $application
      db.openshift.save({application: \"$application\", dbhost: \"$IP\" })
      db.addUser(\"admin\", \"${password}\")
      exit
     "  | mongo $IP


client_result ""
client_result "MongoDB 2.0 database added.  Please make note of these credentials:"
client_result ""
client_result "       Root User: admin"
client_result "   Root Password: $password"
client_result "   Database Name: $application"
client_result "  Connection URL: mongodb://$IP:27017/"
client_result ""
client_result "You can manage your new MongoDB by also embedding rockmongo-1.1"

set_app_info "Connection URL: mongodb://$IP:27017/"
