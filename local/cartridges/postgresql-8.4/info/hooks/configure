#!/bin/bash

# Creates a PostgreSQL server instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t stickshift_postgresql_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 3 ] || print_help

source "/etc/stickshift/stickshift-node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

app_type="postgresql-8.4"
setup_embedded_configure "$1" $2 $3

source ${CART_INFO_DIR}/lib/util

PSQL_DIR="$APP_HOME/postgresql-8.4/"

#
# Detect IP
. $APP_HOME/.env/OPENSHIFT_INTERNAL_IP
IP=$OPENSHIFT_INTERNAL_IP

#
# Create the core of the application
#

if [ -d "$PSQL_DIR" ]; then
    client_error "Embedded PostgreSQL-8.4 already attached to $application"
    exit 132
fi

if [ -f $APP_HOME/.env/OPENSHIFT_DB_TYPE ]; then
    source $APP_HOME/.env/OPENSHIFT_DB_TYPE
    client_error "Only 1 embedded database permitted - application currently has '$OPENSHIFT_DB_TYPE'"
    exit 133
fi

touch $APP_HOME/.psql_history
touch $APP_HOME/.pgpass
chmod 0600 $APP_HOME/.pgpass
mkdir -p "$PSQL_DIR"
pushd "$PSQL_DIR" > /dev/null
mkdir -p log etc data socket pid run
chmod go-rwx data
popd > /dev/null

#
# Create simple PostgreSQL start / stop script
#
ln -s $CART_INFO_DIR/bin/postgresql_ctl.sh $PSQL_DIR/${application}_postgresql_ctl.sh

#
# Setup Permissions
#
chmod +x "$PSQL_DIR/"*.sh || error "Failed to chmod new application scripts" 122
chown $user_id.$group_id -R $PSQL_DIR/ $APP_HOME/.psql_history $APP_HOME/.pgpass || error "Failed to chown new application space.  Please contact support" 123
# Secure script and root dir (so they can't chown the script)
chown root.root "$PSQL_DIR" "$PSQL_DIR"/*.sh
observe_setup_var_lib_file $APP_HOME/.psql_history
observe_setup_var_lib_file $APP_HOME/.pgpass

#
# Overlay default configuration files and extract the template data.
#
pushd "$PSQL_DIR" > /dev/null
observe_setup_var_lib_dir "$PSQL_DIR"
tar -zxf $CART_INFO_DIR/configuration/data/pgdata-template.tar.gz -C data/
#mkdir data/pg_log
#chmod go-rwx data/pg_log
chown -R $user_id.$group_id data/ || error "Failed to chown data/ directory. Please contact support" 126
observe_setup_var_lib_dir "$PSQL_DIR"
sed "s,RHC_PSQLDIR,$PSQL_DIR," $CART_ETC_DIR/postgresql.conf > $PSQL_DIR/data/postgresql.conf
sed -i "s,RHC_BIND_ADDR,$IP," $PSQL_DIR/data/postgresql.conf
cp -f $CART_ETC_DIR/pg_hba.conf $PSQL_DIR/data/pg_hba.conf
popd > /dev/null

#
# Start postgres
#
start_postgresql

#
# Create user/role for uuid and initialize database.
#
PGPASSWORD=admin psql -h $IP -U admin postgres -c "CREATE USER \"$uuid\" with SUPERUSER CREATEDB CREATEROLE;"  || error "Failed to create database user $uuid" 124
# Alternatively try: /bin/su -s /bin/sh "$uuid"  \
#     -c "/usr/bin/createuser -d -r -s  -h $IP -U admin $uuid"
/bin/su -s /bin/sh "$uuid" -c "/usr/bin/createdb \"$application\"" || error "Failed to create default database" 125

# Generate a password with no o's O's or 0's
password=$(generate_password)

#
# Setup Environment Variables
#
echo "export OPENSHIFT_DB_USERNAME='admin'" > $APP_HOME/.env/OPENSHIFT_DB_USERNAME
echo "export OPENSHIFT_DB_PASSWORD='$password'" > $APP_HOME/.env/OPENSHIFT_DB_PASSWORD
echo "export OPENSHIFT_DB_TYPE='postgresql'" > $APP_HOME/.env/OPENSHIFT_DB_TYPE
echo "export OPENSHIFT_DB_HOST='$IP'" > $APP_HOME/.env/OPENSHIFT_DB_HOST
echo "export OPENSHIFT_DB_PORT='5432'" > $APP_HOME/.env/OPENSHIFT_DB_PORT
echo "export OPENSHIFT_DB_SOCKET='${PSQL_DIR}/socket/postgres.sock'" > $APP_HOME/.env/OPENSHIFT_DB_SOCKET
echo "export OPENSHIFT_DB_URL='postgresql://admin:$password@$IP:5432/'" > $APP_HOME/.env/OPENSHIFT_DB_URL
echo "export OPENSHIFT_DB_CTL_SCRIPT='$PSQL_DIR/${application}_postgresql_ctl.sh'" > $APP_HOME/.env/OPENSHIFT_DB_CTL_SCRIPT
echo "export OPENSHIFT_DB_POSTGRESQL_84_DUMP='$CART_INFO_DIR/bin/postgresql_dump.sh'" > $APP_HOME/.env/OPENSHIFT_DB_POSTGRESQL_84_DUMP
echo "export OPENSHIFT_DB_POSTGRESQL_84_DUMP_CLEANUP='$CART_INFO_DIR/bin/postgresql_cleanup.sh'" > $APP_HOME/.env/OPENSHIFT_DB_POSTGRESQL_84_DUMP_CLEANUP
echo "export OPENSHIFT_DB_POSTGRESQL_84_RESTORE='$CART_INFO_DIR/bin/postgresql_restore.sh'" > $APP_HOME/.env/OPENSHIFT_DB_POSTGRESQL_84_RESTORE
echo "export OPENSHIFT_DB_POSTGRESQL_84_EMBEDDED_TYPE='postgresql-8.4'" > $APP_HOME/.env/OPENSHIFT_DB_POSTGRESQL_84_EMBEDDED_TYPE

## Setup automatic login file.
echo "$IP:5432:*:admin:$password" > $APP_HOME/.pgpass
chmod 0400 $APP_HOME/.pgpass

## Setup user
/bin/su -s /bin/sh "$uuid" -c "/usr/bin/psql -d postgres -c \"ALTER USER admin PASSWORD '$password';\"" || error "Failed to create admin user for ${application}" 188


client_result ""
client_result "PostgreSQL 8.4 database added.  Please make note of these credentials:"
client_result ""
client_result "   Root User: admin"
client_result "   Root Password: $password"
client_result "   Database Name: ${application}"
client_result ""
client_result "Connection URL: postgresql://$IP:5432/"
client_result ""
#client_result "You can manage your new PostgreSQL database by also embedding phpPgAdmin."

set_app_info "Connection URL: postgresql://$IP:5432/"
