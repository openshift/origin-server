#!/bin/bash

# Creates a mysql instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t stickshift_mysql_configure
    exit 1
}

function setup_mysql_as_a_service() {
    [ $# -eq 4 -o $# -eq 3 ] || print_help

    setup_configure "$1" $2 $3 $4
    check_app_dir_doesnt_exist
    unobfuscate_app_home $uuid $namespace $application

    # Source the original application name if any.
    source_if_exists "$APP_HOME/.env/OPENSHIFT_APP_NAME"

    # Repo
    if [ ! -d $git_url ]; then
        clone_external_git_repo $application $user_id $group_id $uuid $git_url
    else
        clone_git_repo $application $user_id $group_id $uuid "MySQL 5.1"
    fi

    #
    # Create the core of the application
    #
    mkdir -p "$APP_DIR"
    pushd "$APP_DIR" > /dev/null
    create_standard_app_dirs
    popd > /dev/null

    #
    # Find an open localhost IP
    #
    IP=`find_open_ip $uid $uuid`

    create_app_ctl_script
    populate_repo_dir
    secure_app_dir
    observe_setup_app_and_git_dirs

    #
    # Create environment variables
    #
    create_standard_env_vars
    create_standard_network_env_vars
    create_standard_repo_dir_env_var
    create_standard_path_env_var

    # And prepend to path variable so that mysql app_ctl.sh script is called.
    sed -i 's#export \s*PATH=#export PATH=$CART_INFO_DIR/bin/:#' $APP_HOME/.env/PATH

    #  Add apache vhost configuration.
    export CART_INFO_DIR
    import_env_vars
    $CART_INFO_DIR/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP

    restart_httpd_graceful
}


while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 4 -o $# -eq 3 ] || print_help

CART_NAME="mysql"
CART_VERSION="5.1"
source "/etc/stickshift/stickshift-node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

app_type="$CART_NAME-$CART_VERSION"

if [ -z "$(get_app_type $3)" ]; then
    #  This gear is dedicated to running mysql - configure it as such.
    setup_mysql_as_a_service "$@"
fi

setup_embedded_configure "$1" $2 $3

CART_INFO_DIR=${CARTRIDGE_BASE_PATH}/embedded/mysql-5.1/info
source ${CART_INFO_DIR}/lib/util

MYSQL_DIR="$APP_HOME/$CART_NAME-$CART_VERSION/"

#
# Detect IP
. $APP_HOME/.env/OPENSHIFT_INTERNAL_IP
IP=$OPENSHIFT_INTERNAL_IP

#
# Create the core of the application
#

if [ -d "$MYSQL_DIR" ]
then
    client_error "Embedded MySQL-5.1 already attached to $application"
    exit 132
fi

if [ -f $APP_HOME/.env/OPENSHIFT_DB_TYPE ]; then
    source $APP_HOME/.env/OPENSHIFT_DB_TYPE
    client_error "Only 1 embedded database permitted - application currently has '$OPENSHIFT_DB_TYPE'"
    exit 133
fi

mkdir -p "$MYSQL_DIR"
pushd "$MYSQL_DIR" > /dev/null
mkdir -p log etc data socket pid run
sed "s,RHC_MYSQLDIR,$MYSQL_DIR," $CART_ETC_DIR/my.cnf > $MYSQL_DIR/etc/my.cnf
sed -i "s,RHC_BIND_ADDR,$IP," $MYSQL_DIR/etc/my.cnf
popd > /dev/null
# Create mysql database
/usr/bin/mysql_install_db --defaults-file=$MYSQL_DIR/etc/my.cnf > /dev/null 2>&1 || error "Failed to create mysqldb" 119

#
# Create simple mysql start / stop script
#
ln -s $CART_INFO_DIR/bin/mysql_ctl.sh $MYSQL_DIR/${application}_mysql_ctl.sh

#
# Setup Permissions
# 

chmod +x "$MYSQL_DIR/"*.sh || error "Failed to chmod new application scripts" 122
chown $user_id.$group_id -R $MYSQL_DIR/ || error "Failed to chown new application space.  Please contact support" 123
# Secure script and root dir (so they can't chown the script"
chown root.root "$MYSQL_DIR" "$MYSQL_DIR"/*.sh
observe_setup_var_lib_dir "$MYSQL_DIR"


start_mysql

# Generate a password with no o's O's or 0's
password=$(generate_password)

#
# Setup Environment Variables
#
echo "export OPENSHIFT_DB_USERNAME='admin'" > $APP_HOME/.env/OPENSHIFT_DB_USERNAME
echo "export OPENSHIFT_DB_PASSWORD='$password'" > $APP_HOME/.env/OPENSHIFT_DB_PASSWORD
echo "export OPENSHIFT_DB_TYPE='mysql'" > $APP_HOME/.env/OPENSHIFT_DB_TYPE
echo "export OPENSHIFT_DB_HOST='$IP'" > $APP_HOME/.env/OPENSHIFT_DB_HOST
echo "export OPENSHIFT_DB_PORT='3306'" > $APP_HOME/.env/OPENSHIFT_DB_PORT
echo "export OPENSHIFT_DB_SOCKET='${MYSQL_DIR}/socket/mysql.sock'" > $APP_HOME/.env/OPENSHIFT_DB_SOCKET
echo "export OPENSHIFT_DB_URL='mysql://admin:$password@$IP:3306/'" > $APP_HOME/.env/OPENSHIFT_DB_URL
echo "export OPENSHIFT_DB_CTL_SCRIPT='$MYSQL_DIR/${application}_mysql_ctl.sh'" > $APP_HOME/.env/OPENSHIFT_DB_CTL_SCRIPT
echo "export OPENSHIFT_DB_MYSQL_51_DUMP='$CART_INFO_DIR/bin/mysql_dump.sh'" > $APP_HOME/.env/OPENSHIFT_DB_MYSQL_51_DUMP
echo "export OPENSHIFT_DB_MYSQL_51_DUMP_CLEANUP='$CART_INFO_DIR/bin/mysql_cleanup.sh'" > $APP_HOME/.env/OPENSHIFT_DB_MYSQL_51_DUMP_CLEANUP
echo "export OPENSHIFT_DB_MYSQL_51_RESTORE='$CART_INFO_DIR/bin/mysql_restore.sh'" > $APP_HOME/.env/OPENSHIFT_DB_MYSQL_51_RESTORE
echo "export OPENSHIFT_DB_MYSQL_51_EMBEDDED_TYPE='mysql-5.1'" > $APP_HOME/.env/OPENSHIFT_DB_MYSQL_51_EMBEDDED_TYPE

## Setup user
dbname=${OPENSHIFT_APP_NAME:-$application}
echo "drop database test;
create database \`${dbname}\` DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;" | mysql -u root -S "${MYSQL_DIR}/socket/mysql.sock" > /dev/null || error "Failed to create ${application}" 188

echo "                                  
delete from user;
grant all on *.* to 'admin'@'$IP' identified by '$password' with grant option;
grant all on *.* to 'admin'@'localhost' identified by '$password' with grant option;
flush privileges;" | mysql -u root -S "${MYSQL_DIR}/socket/mysql.sock" mysql > /dev/null || error "Failed to setup initial root user" 187

mysql_ip="$IP"
mysql_port="3306"
if is_a_scalable_app; then
   if $(dirname "$0")/expose-port "$@"; then
       source $APP_HOME/.env/OPENSHIFT_GEAR_DNS
       source $APP_HOME/.env/OPENSHIFT_DB_PROXY_PORT
       mysql_ip=${OPENSHIFT_GEAR_DNS:-"$IP"}
       mysql_port=${OPENSHIFT_DB_PROXY_PORT:-3306}
   fi
fi

client_result ""
client_result "MySQL 5.1 database added.  Please make note of these credentials:"
client_result ""
client_result "   Root User: admin"
client_result "   Root Password: $password"
client_result "   Database Name: ${dbname}"
client_result ""

if is_a_scalable_app; then
    client_result "Connection URL: mysql://$mysql_ip:$mysql_port/"
    client_result "MySQL gear-local connection URL: mysql://$IP:3306/"
    client_result ""
else
    client_result "Connection URL: mysql://$IP:3306/"
    client_result ""
fi

client_result "You can manage your new MySQL database by also embedding phpmyadmin-3.4."

if is_a_scalable_app; then
    set_app_info "Connection URL: mysql://$mysql_ip:$mysql_port/"
else
    set_app_info "Connection URL: mysql://$IP:3306/"
fi
