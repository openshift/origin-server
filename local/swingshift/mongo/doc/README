                    Mongo Auth Plugin for StickShift
                   ----------------------------------
SwingShift is an optional plugin for Stickshift and it provides authentication. It uses MD5 + salt scheme for encrypting passwords and it uses Mongo datastore for persistence.
This document describes how to register and authenticate StickShift user using SWingShift.

* Install MongoDB
* Setup MongoDB
* Install SwingShift
* Configure SwingShift
* Register StickShift user
* Authenticate StickShift user

* Install MongoDB
  Download mongodb server.

    yum install mongodb-server    

* Setup MongoDB
  Enable auth on mongodb configuration

    sed -i -e "s/^#auth = .*$/auth = true/" /etc/mongodb.conf
  
  Enable and start mongodb service

    systemctl enable mongod.service
    systemctl start mongod.service

* Install SwingShift

* Configure SwingShift
  Restrict privileges to mongo auth database

    /usr/bin/mongo localhost/stickshift_broker_dev --eval "db.addUser(\"stickshift\", \"mooo\")"

  Enable mongo auth in StickShift configuration

    systemctl stop stickshift-broker.service

    SS_BROKER_ENVDIR=/var/www/stickshift/broker/config/environments
    echo "require File.expand_path('../plugin-config/swingshift-mongo-plugin.rb', __FILE__)" >> ${SS_BROKER_ENVDIR}/development.rb
cat <<EOF > ${SS_BROKER_ENVDIR}/plugin-config/swingshift-mongo-plugin.rb
    Broker::Application.configure do
      config.auth = {
        :salt => "ClWqe5zKtEW4CJEMyjzQ",
    
        # Replica set example: [[<host-1>, <port-1>], [<host-2>, <port-2>], ...]
        :mongo_replica_sets => false,
        :mongo_host_port => ["localhost", 27017],
  
        :mongo_user => "stickshift",
        :mongo_password => "mooo",
        :mongo_db => "stickshift_broker_dev",
        :mongo_collection => "auth_user"
      }
    end
    EOF

    systemctl start stickshift-broker.service

* Register StickShift user

    /usr/bin/ss-register-user --user <user-name> --password <password>

* Authenticate StickShift user
  Any REST api calls or CLI tools to StickShift will be processed only for the registered user-name/password
  Example:
    The below query fails with 'Access Denied' error.
    curl -k https://localhost/broker/rest/domains

    The below query succeeds for valid username/password.
    curl -k --user "<registered-user-name>:<password>" https://localhost/broker/rest/domains        

