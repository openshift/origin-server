                    Mongo Auth Plugin for OpenShift Origin
                   ----------------------------------
OpenShift Origin is an optional plugin for OpenShift and it provides authentication. It uses MD5 + salt scheme for encrypting passwords and it uses Mongo datastore for persistence.
This document describes how to register and authenticate OpenShift Origin user using SWingShift.

* Install MongoDB
* Setup MongoDB
* Install OpenShift Origin
* Configure OpenShift Origin
* Register OpenShift Origin user
* Authenticate OpenShift Origin user

* Install MongoDB
  Download mongodb server.

    yum install mongodb-server    

* Setup MongoDB
  Enable auth on mongodb configuration

    sed -i -e "s/^#auth = .*$/auth = true/" /etc/mongodb.conf
  
  Enable and start mongodb service

    systemctl enable mongod.service
    systemctl start mongod.service

* Install OpenShift Origin

* Configure OpenShift Origin
  Restrict privileges to mongo auth database

    /usr/bin/mongo localhost/openshift_broker_dev --eval "db.addUser(\"openshift\", \"mooo\")"

  Enable mongo auth in OpenShift Origin configuration

    systemctl stop openshift-origin-broker.service

    SS_BROKER_ENVDIR=/var/www/openshift/broker/config/environments
    echo "require File.expand_path('../plugin-config/openshift-origin-auth-mongo.rb', __FILE__)" >> ${SS_BROKER_ENVDIR}/development.rb
cat <<EOF > ${SS_BROKER_ENVDIR}/plugin-config/openshift-origin-auth-mongo.rb
    Broker::Application.configure do
      config.auth = {
        :salt => "ClWqe5zKtEW4CJEMyjzQ",
    
        :mongo_host_port => "localhost:27017",
        :mongo_user => "openshift",
        :mongo_password => "mooo",
        :mongo_db => "openshift_broker_dev",
      }
    end
    EOF

    systemctl start openshift-origin-broker.service

* Register OpenShift Origin user

    /usr/bin/oo-register-user --user <user-name> --password <password>

* Authenticate OpenShift Origin user
  Any REST api calls or CLI tools to OpenShift Origin will be processed only for the registered user-name/password
  Example:
    The below query fails with 'Access Denied' error.
    curl -k https://localhost/broker/rest/domains

    The below query succeeds for valid username/password.
    curl -k --user "<registered-user-name>:<password>" https://localhost/broker/rest/domains        

